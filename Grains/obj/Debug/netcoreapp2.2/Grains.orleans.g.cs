// <auto-generated />
#if !EXCLUDE_GENERATED_CODE
#pragma warning disable 162
#pragma warning disable 219
#pragma warning disable 414
#pragma warning disable 618
#pragma warning disable 649
#pragma warning disable 693
#pragma warning disable 1591
#pragma warning disable 1998
using global::Orleans;

[assembly: global::Orleans.Metadata.FeaturePopulatorAttribute(typeof(OrleansGeneratedCode.OrleansCodeGen49ca88b379FeaturePopulator))]
[assembly: global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Grains, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.DotNet.PlatformAbstractions, Version=2.0.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100f33a29044fa9d740c9b3213a93e57c84b472c84e0b8a0e1ae48e67a9f8f6de9d5f7f3d52ac23e48ac51801f1dc950abe901da34d2a9e3baadb141a17c77ef3c565dd5ee5054b91cf63bb3c6ab83f72ab3aafe93d0fc3c2348b764fafb0b1c0733de51459aeab46580384bf9d74c4e28164b7cde247f891ba07891c9d872ad2bb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.Extensions.Configuration.Abstractions, Version=2.2.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100f33a29044fa9d740c9b3213a93e57c84b472c84e0b8a0e1ae48e67a9f8f6de9d5f7f3d52ac23e48ac51801f1dc950abe901da34d2a9e3baadb141a17c77ef3c565dd5ee5054b91cf63bb3c6ab83f72ab3aafe93d0fc3c2348b764fafb0b1c0733de51459aeab46580384bf9d74c4e28164b7cde247f891ba07891c9d872ad2bb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.Extensions.Configuration.Binder, Version=2.2.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100f33a29044fa9d740c9b3213a93e57c84b472c84e0b8a0e1ae48e67a9f8f6de9d5f7f3d52ac23e48ac51801f1dc950abe901da34d2a9e3baadb141a17c77ef3c565dd5ee5054b91cf63bb3c6ab83f72ab3aafe93d0fc3c2348b764fafb0b1c0733de51459aeab46580384bf9d74c4e28164b7cde247f891ba07891c9d872ad2bb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.Extensions.Configuration, Version=2.2.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100f33a29044fa9d740c9b3213a93e57c84b472c84e0b8a0e1ae48e67a9f8f6de9d5f7f3d52ac23e48ac51801f1dc950abe901da34d2a9e3baadb141a17c77ef3c565dd5ee5054b91cf63bb3c6ab83f72ab3aafe93d0fc3c2348b764fafb0b1c0733de51459aeab46580384bf9d74c4e28164b7cde247f891ba07891c9d872ad2bb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.Extensions.DependencyInjection.Abstractions, Version=2.2.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100f33a29044fa9d740c9b3213a93e57c84b472c84e0b8a0e1ae48e67a9f8f6de9d5f7f3d52ac23e48ac51801f1dc950abe901da34d2a9e3baadb141a17c77ef3c565dd5ee5054b91cf63bb3c6ab83f72ab3aafe93d0fc3c2348b764fafb0b1c0733de51459aeab46580384bf9d74c4e28164b7cde247f891ba07891c9d872ad2bb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.Extensions.DependencyInjection, Version=2.1.1.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100f33a29044fa9d740c9b3213a93e57c84b472c84e0b8a0e1ae48e67a9f8f6de9d5f7f3d52ac23e48ac51801f1dc950abe901da34d2a9e3baadb141a17c77ef3c565dd5ee5054b91cf63bb3c6ab83f72ab3aafe93d0fc3c2348b764fafb0b1c0733de51459aeab46580384bf9d74c4e28164b7cde247f891ba07891c9d872ad2bb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.Extensions.DependencyModel, Version=2.0.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100f33a29044fa9d740c9b3213a93e57c84b472c84e0b8a0e1ae48e67a9f8f6de9d5f7f3d52ac23e48ac51801f1dc950abe901da34d2a9e3baadb141a17c77ef3c565dd5ee5054b91cf63bb3c6ab83f72ab3aafe93d0fc3c2348b764fafb0b1c0733de51459aeab46580384bf9d74c4e28164b7cde247f891ba07891c9d872ad2bb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.Extensions.FileProviders.Abstractions, Version=2.1.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100f33a29044fa9d740c9b3213a93e57c84b472c84e0b8a0e1ae48e67a9f8f6de9d5f7f3d52ac23e48ac51801f1dc950abe901da34d2a9e3baadb141a17c77ef3c565dd5ee5054b91cf63bb3c6ab83f72ab3aafe93d0fc3c2348b764fafb0b1c0733de51459aeab46580384bf9d74c4e28164b7cde247f891ba07891c9d872ad2bb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.Extensions.Hosting.Abstractions, Version=2.1.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100f33a29044fa9d740c9b3213a93e57c84b472c84e0b8a0e1ae48e67a9f8f6de9d5f7f3d52ac23e48ac51801f1dc950abe901da34d2a9e3baadb141a17c77ef3c565dd5ee5054b91cf63bb3c6ab83f72ab3aafe93d0fc3c2348b764fafb0b1c0733de51459aeab46580384bf9d74c4e28164b7cde247f891ba07891c9d872ad2bb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.Extensions.Logging.Abstractions, Version=2.2.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100f33a29044fa9d740c9b3213a93e57c84b472c84e0b8a0e1ae48e67a9f8f6de9d5f7f3d52ac23e48ac51801f1dc950abe901da34d2a9e3baadb141a17c77ef3c565dd5ee5054b91cf63bb3c6ab83f72ab3aafe93d0fc3c2348b764fafb0b1c0733de51459aeab46580384bf9d74c4e28164b7cde247f891ba07891c9d872ad2bb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.Extensions.Logging.Configuration, Version=2.2.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100f33a29044fa9d740c9b3213a93e57c84b472c84e0b8a0e1ae48e67a9f8f6de9d5f7f3d52ac23e48ac51801f1dc950abe901da34d2a9e3baadb141a17c77ef3c565dd5ee5054b91cf63bb3c6ab83f72ab3aafe93d0fc3c2348b764fafb0b1c0733de51459aeab46580384bf9d74c4e28164b7cde247f891ba07891c9d872ad2bb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.Extensions.Logging.Console, Version=2.2.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100f33a29044fa9d740c9b3213a93e57c84b472c84e0b8a0e1ae48e67a9f8f6de9d5f7f3d52ac23e48ac51801f1dc950abe901da34d2a9e3baadb141a17c77ef3c565dd5ee5054b91cf63bb3c6ab83f72ab3aafe93d0fc3c2348b764fafb0b1c0733de51459aeab46580384bf9d74c4e28164b7cde247f891ba07891c9d872ad2bb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.Extensions.Logging, Version=2.2.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100f33a29044fa9d740c9b3213a93e57c84b472c84e0b8a0e1ae48e67a9f8f6de9d5f7f3d52ac23e48ac51801f1dc950abe901da34d2a9e3baadb141a17c77ef3c565dd5ee5054b91cf63bb3c6ab83f72ab3aafe93d0fc3c2348b764fafb0b1c0733de51459aeab46580384bf9d74c4e28164b7cde247f891ba07891c9d872ad2bb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.Extensions.Options.ConfigurationExtensions, Version=2.2.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100f33a29044fa9d740c9b3213a93e57c84b472c84e0b8a0e1ae48e67a9f8f6de9d5f7f3d52ac23e48ac51801f1dc950abe901da34d2a9e3baadb141a17c77ef3c565dd5ee5054b91cf63bb3c6ab83f72ab3aafe93d0fc3c2348b764fafb0b1c0733de51459aeab46580384bf9d74c4e28164b7cde247f891ba07891c9d872ad2bb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.Extensions.Options, Version=2.2.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100f33a29044fa9d740c9b3213a93e57c84b472c84e0b8a0e1ae48e67a9f8f6de9d5f7f3d52ac23e48ac51801f1dc950abe901da34d2a9e3baadb141a17c77ef3c565dd5ee5054b91cf63bb3c6ab83f72ab3aafe93d0fc3c2348b764fafb0b1c0733de51459aeab46580384bf9d74c4e28164b7cde247f891ba07891c9d872ad2bb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.Extensions.Primitives, Version=2.2.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100f33a29044fa9d740c9b3213a93e57c84b472c84e0b8a0e1ae48e67a9f8f6de9d5f7f3d52ac23e48ac51801f1dc950abe901da34d2a9e3baadb141a17c77ef3c565dd5ee5054b91cf63bb3c6ab83f72ab3aafe93d0fc3c2348b764fafb0b1c0733de51459aeab46580384bf9d74c4e28164b7cde247f891ba07891c9d872ad2bb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Newtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100f561df277c6c0b497d629032b410cdcf286e537c054724f7ffa0164345f62b3e642029d7a80cc351918955328c4adc8a048823ef90b0cf38ea7db0d729caf2b633c3babe08b0310198c1081995c19029bc675193744eab9d7345b8a67258ec17d112cebdbbb2a281487dceeafb9d83aa930f32103fbe1d2911425bc5744002c7"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Orleans.EventSourcing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Runtime.CompilerServices.Unsafe, Version=4.0.4.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Xml.XPath.XmlDocument, Version=4.0.2.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293")]
namespace OrleansGeneratedCode
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0")]
    internal sealed class OrleansCodeGen49ca88b379FeaturePopulator : global::Orleans.Metadata.IFeaturePopulator<global::Orleans.Metadata.GrainInterfaceFeature>, global::Orleans.Metadata.IFeaturePopulator<global::Orleans.Metadata.GrainClassFeature>, global::Orleans.Metadata.IFeaturePopulator<global::Orleans.Serialization.SerializerFeature>
    {
        public void Populate(global::Orleans.Metadata.GrainInterfaceFeature feature)
        {
        }

        public void Populate(global::Orleans.Metadata.GrainClassFeature feature)
        {
            feature.Classes.Add(new global::Orleans.Metadata.GrainClassMetadata(typeof(global::Grains.GreetingGrain)));
            feature.Classes.Add(new global::Orleans.Metadata.GrainClassMetadata(typeof(global::Grains.HelloGrain)));
        }

        public void Populate(global::Orleans.Serialization.SerializerFeature feature)
        {
            feature.AddKnownType("Grains.GreetingGrain,Grains", "Grains.GreetingGrain");
            feature.AddKnownType("Grains.HelloGrain,Grains", "Grains.HelloGrain");
            feature.AddKnownType("Grains.GreetingEvent,Grains", "Grains.GreetingEvent");
            feature.AddKnownType("Grains.GreetingState,Grains", "Grains.GreetingState");
            feature.AddKnownType("Grains.GreetingArchive,Grains", "Grains.GreetingArchive");
            feature.AddKnownType("Microsoft.DotNet.PlatformAbstractions.HashCodeCombiner,Microsoft.DotNet.PlatformAbstractions", "Microsoft.DotNet.PlatformAbstractions.HashCodeCombiner");
            feature.AddKnownType("Microsoft.DotNet.PlatformAbstractions.Platform,Microsoft.DotNet.PlatformAbstractions", "Microsoft.DotNet.PlatformAbstractions.Platform");
            feature.AddKnownType("Microsoft.DotNet.PlatformAbstractions.Native.NativeMethods+Windows+RTL_OSVERSIONINFOEX,Microsoft.DotNet.PlatformAbstractions", "Microsoft.DotNet.PlatformAbstractions.Native.RTL_OSVERSIONINFOEX");
            feature.AddKnownType("Microsoft.DotNet.PlatformAbstractions.Native.PlatformApis+DistroInfo,Microsoft.DotNet.PlatformAbstractions", "Microsoft.DotNet.PlatformAbstractions.Native.DistroInfo");
            feature.AddKnownType("Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Configuration.Abstractions", "Microsoft.Extensions.Configuration.IConfiguration");
            feature.AddKnownType("Microsoft.Extensions.Configuration.IConfigurationBuilder,Microsoft.Extensions.Configuration.Abstractions", "Microsoft.Extensions.Configuration.IConfigurationBuilder");
            feature.AddKnownType("Microsoft.Extensions.Configuration.IConfigurationProvider,Microsoft.Extensions.Configuration.Abstractions", "Microsoft.Extensions.Configuration.IConfigurationProvider");
            feature.AddKnownType("Microsoft.Extensions.Configuration.IConfigurationRoot,Microsoft.Extensions.Configuration.Abstractions", "Microsoft.Extensions.Configuration.IConfigurationRoot");
            feature.AddKnownType("Microsoft.Extensions.Configuration.IConfigurationSection,Microsoft.Extensions.Configuration.Abstractions", "Microsoft.Extensions.Configuration.IConfigurationSection");
            feature.AddKnownType("Microsoft.Extensions.Configuration.IConfigurationSource,Microsoft.Extensions.Configuration.Abstractions", "Microsoft.Extensions.Configuration.IConfigurationSource");
            feature.AddKnownType("Microsoft.Extensions.Configuration.BinderOptions,Microsoft.Extensions.Configuration.Binder", "Microsoft.Extensions.Configuration.BinderOptions");
            feature.AddKnownType("Microsoft.Extensions.Configuration.ChainedConfigurationProvider,Microsoft.Extensions.Configuration", "Microsoft.Extensions.Configuration.ChainedConfigurationProvider");
            feature.AddKnownType("Microsoft.Extensions.Configuration.ChainedConfigurationSource,Microsoft.Extensions.Configuration", "Microsoft.Extensions.Configuration.ChainedConfigurationSource");
            feature.AddKnownType("Microsoft.Extensions.Configuration.ConfigurationBuilder,Microsoft.Extensions.Configuration", "Microsoft.Extensions.Configuration.ConfigurationBuilder");
            feature.AddKnownType("Microsoft.Extensions.Configuration.ConfigurationKeyComparer,Microsoft.Extensions.Configuration", "Microsoft.Extensions.Configuration.ConfigurationKeyComparer");
            feature.AddKnownType("Microsoft.Extensions.Configuration.ConfigurationProvider,Microsoft.Extensions.Configuration", "Microsoft.Extensions.Configuration.ConfigurationProvider");
            feature.AddKnownType("Microsoft.Extensions.Configuration.ConfigurationReloadToken,Microsoft.Extensions.Configuration", "Microsoft.Extensions.Configuration.ConfigurationReloadToken");
            feature.AddKnownType("Microsoft.Extensions.Configuration.ConfigurationRoot,Microsoft.Extensions.Configuration", "Microsoft.Extensions.Configuration.ConfigurationRoot");
            feature.AddKnownType("Microsoft.Extensions.Configuration.ConfigurationSection,Microsoft.Extensions.Configuration", "Microsoft.Extensions.Configuration.ConfigurationSection");
            feature.AddKnownType("Microsoft.Extensions.Configuration.Memory.MemoryConfigurationProvider,Microsoft.Extensions.Configuration", "Microsoft.Extensions.Configuration.Memory.MemoryConfigurationProvider");
            feature.AddKnownType("Microsoft.Extensions.Configuration.Memory.MemoryConfigurationSource,Microsoft.Extensions.Configuration", "Microsoft.Extensions.Configuration.Memory.MemoryConfigurationSource");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.DependencyInjection.Abstractions", "Microsoft.Extensions.DependencyInjection.IServiceCollection");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1,Microsoft.Extensions.DependencyInjection.Abstractions", "Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1'1");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.IServiceScope,Microsoft.Extensions.DependencyInjection.Abstractions", "Microsoft.Extensions.DependencyInjection.IServiceScope");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.IServiceScopeFactory,Microsoft.Extensions.DependencyInjection.Abstractions", "Microsoft.Extensions.DependencyInjection.IServiceScopeFactory");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ISupportRequiredService,Microsoft.Extensions.DependencyInjection.Abstractions", "Microsoft.Extensions.DependencyInjection.ISupportRequiredService");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceDescriptor,Microsoft.Extensions.DependencyInjection.Abstractions", "Microsoft.Extensions.DependencyInjection.ServiceDescriptor");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLifetime,Microsoft.Extensions.DependencyInjection.Abstractions", "Microsoft.Extensions.DependencyInjection.ServiceLifetime");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ActivatorUtilities+ConstructorMatcher,Microsoft.Extensions.DependencyInjection.Abstractions", "Microsoft.Extensions.DependencyInjection.ConstructorMatcher");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ActivatorUtilitiesConstructorAttribute,Microsoft.Extensions.DependencyInjection.Abstractions", "Microsoft.Extensions.DependencyInjection.ActivatorUtilitiesConstructorAttribute");
            feature.AddKnownType("Microsoft.Extensions.Internal.ParameterDefaultValue,Microsoft.Extensions.DependencyInjection.Abstractions", "Microsoft.Extensions.Internal.ParameterDefaultValue");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.DefaultServiceProviderFactory,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.DefaultServiceProviderFactory");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceCollection,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceCollection");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceProvider,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceProvider");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceProviderMode,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceProviderMode");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceProviderOptions,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceProviderOptions");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteChain,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteChain");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteChain+ChainItemInfo,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.ChainItemInfo");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteExpressionBuilderContext,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteExpressionBuilderContext");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory+ServiceDescriptorCacheItem,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceDescriptorCacheItem");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteKind,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteKind");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteValidator,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteValidator");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteValidator+CallSiteValidatorState,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteValidatorState");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2'2");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.CompiledServiceProviderEngine,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.CompiledServiceProviderEngine");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.ConstantCallSite,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.ConstantCallSite");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.ConstructorCallSite,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.ConstructorCallSite");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.CreateInstanceCallSite,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.CreateInstanceCallSite");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.ExpressionResolverBuilder,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.ExpressionResolverBuilder");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.ExpressionsServiceProviderEngine,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.ExpressionsServiceProviderEngine");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.FactoryCallSite,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.FactoryCallSite");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.IEnumerableCallSite,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.IEnumerableCallSite");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.IServiceCallSite,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.IServiceCallSite");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.IServiceProviderEngine,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.IServiceProviderEngine");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.IServiceProviderEngineCallback,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.IServiceProviderEngineCallback");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.RuntimeServiceProviderEngine,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.RuntimeServiceProviderEngine");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.ScopedCallSite,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.ScopedCallSite");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderCallSite,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderCallSite");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceScopeFactoryCallSite,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceScopeFactoryCallSite");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.SingletonCallSite,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.SingletonCallSite");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.ThrowHelper,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.ThrowHelper");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.TransientCallSite,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.TransientCallSite");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.ILEmitCallSiteAnalysisResult,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.ILEmitCallSiteAnalysisResult");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.ILEmitCallSiteAnalyzer,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.ILEmitCallSiteAnalyzer");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.ILEmitResolverBuilder,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.ILEmitResolverBuilder");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.ILEmitResolverBuilder+ILEmitResolverBuilderRuntimeContext,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.ILEmitResolverBuilderRuntimeContext");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.ILEmitResolverBuilderContext,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.ILEmitResolverBuilderContext");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.ILEmitServiceProviderEngine,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.ILEmitServiceProviderEngine");
            feature.AddKnownType("Microsoft.Extensions.Internal.TypeNameHelper,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.Internal.TypeNameHelper");
            feature.AddKnownType("Microsoft.Extensions.Internal.TypeNameHelper+DisplayNameOptions,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.Internal.DisplayNameOptions");
            feature.AddKnownType("Microsoft.Extensions.Internal.ParameterDefaultValue,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.Internal.ParameterDefaultValue");
            feature.AddKnownType("Microsoft.Extensions.DependencyModel.CompilationLibrary,Microsoft.Extensions.DependencyModel", "Microsoft.Extensions.DependencyModel.CompilationLibrary");
            feature.AddKnownType("Microsoft.Extensions.DependencyModel.CompilationOptions,Microsoft.Extensions.DependencyModel", "Microsoft.Extensions.DependencyModel.CompilationOptions");
            feature.AddKnownType("Microsoft.Extensions.DependencyModel.Dependency,Microsoft.Extensions.DependencyModel", "Microsoft.Extensions.DependencyModel.Dependency");
            feature.AddKnownType("Microsoft.Extensions.DependencyModel.DependencyContext,Microsoft.Extensions.DependencyModel", "Microsoft.Extensions.DependencyModel.DependencyContext");
            feature.AddKnownType("Microsoft.Extensions.DependencyModel.DependencyContext+LibraryMergeEqualityComparer`1,Microsoft.Extensions.DependencyModel", "Microsoft.Extensions.DependencyModel.LibraryMergeEqualityComparer`1'1");
            feature.AddKnownType("Microsoft.Extensions.DependencyModel.DependencyContextJsonReader,Microsoft.Extensions.DependencyModel", "Microsoft.Extensions.DependencyModel.DependencyContextJsonReader");
            feature.AddKnownType("Microsoft.Extensions.DependencyModel.DependencyContextJsonReader+Target,Microsoft.Extensions.DependencyModel", "Microsoft.Extensions.DependencyModel.Target");
            feature.AddKnownType("Microsoft.Extensions.DependencyModel.DependencyContextJsonReader+TargetLibrary,Microsoft.Extensions.DependencyModel", "Microsoft.Extensions.DependencyModel.TargetLibrary");
            feature.AddKnownType("Microsoft.Extensions.DependencyModel.DependencyContextJsonReader+RuntimeTargetEntryStub,Microsoft.Extensions.DependencyModel", "Microsoft.Extensions.DependencyModel.RuntimeTargetEntryStub");
            feature.AddKnownType("Microsoft.Extensions.DependencyModel.DependencyContextJsonReader+LibraryStub,Microsoft.Extensions.DependencyModel", "Microsoft.Extensions.DependencyModel.LibraryStub");
            feature.AddKnownType("Microsoft.Extensions.DependencyModel.DependencyContextLoader,Microsoft.Extensions.DependencyModel", "Microsoft.Extensions.DependencyModel.DependencyContextLoader");
            feature.AddKnownType("Microsoft.Extensions.DependencyModel.DependencyContextPaths,Microsoft.Extensions.DependencyModel", "Microsoft.Extensions.DependencyModel.DependencyContextPaths");
            feature.AddKnownType("Microsoft.Extensions.DependencyModel.DependencyContextStrings,Microsoft.Extensions.DependencyModel", "Microsoft.Extensions.DependencyModel.DependencyContextStrings");
            feature.AddKnownType("Microsoft.Extensions.DependencyModel.DependencyContextWriter,Microsoft.Extensions.DependencyModel", "Microsoft.Extensions.DependencyModel.DependencyContextWriter");
            feature.AddKnownType("Microsoft.Extensions.DependencyModel.DirectoryWrapper,Microsoft.Extensions.DependencyModel", "Microsoft.Extensions.DependencyModel.DirectoryWrapper");
            feature.AddKnownType("Microsoft.Extensions.DependencyModel.EnvironmentWrapper,Microsoft.Extensions.DependencyModel", "Microsoft.Extensions.DependencyModel.EnvironmentWrapper");
            feature.AddKnownType("Microsoft.Extensions.DependencyModel.FileSystemWrapper,Microsoft.Extensions.DependencyModel", "Microsoft.Extensions.DependencyModel.FileSystemWrapper");
            feature.AddKnownType("Microsoft.Extensions.DependencyModel.FileWrapper,Microsoft.Extensions.DependencyModel", "Microsoft.Extensions.DependencyModel.FileWrapper");
            feature.AddKnownType("Microsoft.Extensions.DependencyModel.IDependencyContextReader,Microsoft.Extensions.DependencyModel", "Microsoft.Extensions.DependencyModel.IDependencyContextReader");
            feature.AddKnownType("Microsoft.Extensions.DependencyModel.IDirectory,Microsoft.Extensions.DependencyModel", "Microsoft.Extensions.DependencyModel.IDirectory");
            feature.AddKnownType("Microsoft.Extensions.DependencyModel.IEnvironment,Microsoft.Extensions.DependencyModel", "Microsoft.Extensions.DependencyModel.IEnvironment");
            feature.AddKnownType("Microsoft.Extensions.DependencyModel.IFile,Microsoft.Extensions.DependencyModel", "Microsoft.Extensions.DependencyModel.IFile");
            feature.AddKnownType("Microsoft.Extensions.DependencyModel.IFileSystem,Microsoft.Extensions.DependencyModel", "Microsoft.Extensions.DependencyModel.IFileSystem");
            feature.AddKnownType("Microsoft.Extensions.DependencyModel.Library,Microsoft.Extensions.DependencyModel", "Microsoft.Extensions.DependencyModel.Library");
            feature.AddKnownType("Microsoft.Extensions.DependencyModel.ResourceAssembly,Microsoft.Extensions.DependencyModel", "Microsoft.Extensions.DependencyModel.ResourceAssembly");
            feature.AddKnownType("Microsoft.Extensions.DependencyModel.RuntimeAssembly,Microsoft.Extensions.DependencyModel", "Microsoft.Extensions.DependencyModel.RuntimeAssembly");
            feature.AddKnownType("Microsoft.Extensions.DependencyModel.RuntimeAssetGroup,Microsoft.Extensions.DependencyModel", "Microsoft.Extensions.DependencyModel.RuntimeAssetGroup");
            feature.AddKnownType("Microsoft.Extensions.DependencyModel.RuntimeFallbacks,Microsoft.Extensions.DependencyModel", "Microsoft.Extensions.DependencyModel.RuntimeFallbacks");
            feature.AddKnownType("Microsoft.Extensions.DependencyModel.RuntimeLibrary,Microsoft.Extensions.DependencyModel", "Microsoft.Extensions.DependencyModel.RuntimeLibrary");
            feature.AddKnownType("Microsoft.Extensions.DependencyModel.TargetInfo,Microsoft.Extensions.DependencyModel", "Microsoft.Extensions.DependencyModel.TargetInfo");
            feature.AddKnownType("Microsoft.Extensions.DependencyModel.Resolution.AppBaseCompilationAssemblyResolver,Microsoft.Extensions.DependencyModel", "Microsoft.Extensions.DependencyModel.Resolution.AppBaseCompilationAssemblyResolver");
            feature.AddKnownType("Microsoft.Extensions.DependencyModel.Resolution.CompositeCompilationAssemblyResolver,Microsoft.Extensions.DependencyModel", "Microsoft.Extensions.DependencyModel.Resolution.CompositeCompilationAssemblyResolver");
            feature.AddKnownType("Microsoft.Extensions.DependencyModel.Resolution.DotNetReferenceAssembliesPathResolver,Microsoft.Extensions.DependencyModel", "Microsoft.Extensions.DependencyModel.Resolution.DotNetReferenceAssembliesPathResolver");
            feature.AddKnownType("Microsoft.Extensions.DependencyModel.Resolution.ICompilationAssemblyResolver,Microsoft.Extensions.DependencyModel", "Microsoft.Extensions.DependencyModel.Resolution.ICompilationAssemblyResolver");
            feature.AddKnownType("Microsoft.Extensions.DependencyModel.Resolution.PackageCompilationAssemblyResolver,Microsoft.Extensions.DependencyModel", "Microsoft.Extensions.DependencyModel.Resolution.PackageCompilationAssemblyResolver");
            feature.AddKnownType("Microsoft.Extensions.DependencyModel.Resolution.ReferenceAssemblyPathResolver,Microsoft.Extensions.DependencyModel", "Microsoft.Extensions.DependencyModel.Resolution.ReferenceAssemblyPathResolver");
            feature.AddKnownType("Microsoft.Extensions.FileProviders.IDirectoryContents,Microsoft.Extensions.FileProviders.Abstractions", "Microsoft.Extensions.FileProviders.IDirectoryContents");
            feature.AddKnownType("Microsoft.Extensions.FileProviders.IFileInfo,Microsoft.Extensions.FileProviders.Abstractions", "Microsoft.Extensions.FileProviders.IFileInfo");
            feature.AddKnownType("Microsoft.Extensions.FileProviders.IFileProvider,Microsoft.Extensions.FileProviders.Abstractions", "Microsoft.Extensions.FileProviders.IFileProvider");
            feature.AddKnownType("Microsoft.Extensions.FileProviders.NotFoundDirectoryContents,Microsoft.Extensions.FileProviders.Abstractions", "Microsoft.Extensions.FileProviders.NotFoundDirectoryContents");
            feature.AddKnownType("Microsoft.Extensions.FileProviders.NotFoundFileInfo,Microsoft.Extensions.FileProviders.Abstractions", "Microsoft.Extensions.FileProviders.NotFoundFileInfo");
            feature.AddKnownType("Microsoft.Extensions.FileProviders.NullChangeToken,Microsoft.Extensions.FileProviders.Abstractions", "Microsoft.Extensions.FileProviders.NullChangeToken");
            feature.AddKnownType("Microsoft.Extensions.FileProviders.NullFileProvider,Microsoft.Extensions.FileProviders.Abstractions", "Microsoft.Extensions.FileProviders.NullFileProvider");
            feature.AddKnownType("Microsoft.Extensions.FileProviders.EmptyDisposable,Microsoft.Extensions.FileProviders.Abstractions", "Microsoft.Extensions.FileProviders.EmptyDisposable");
            feature.AddKnownType("Microsoft.Extensions.Hosting.BackgroundService,Microsoft.Extensions.Hosting.Abstractions", "Microsoft.Extensions.Hosting.BackgroundService");
            feature.AddKnownType("Microsoft.Extensions.Hosting.HostBuilderContext,Microsoft.Extensions.Hosting.Abstractions", "Microsoft.Extensions.Hosting.HostBuilderContext");
            feature.AddKnownType("Microsoft.Extensions.Hosting.IApplicationLifetime,Microsoft.Extensions.Hosting.Abstractions", "Microsoft.Extensions.Hosting.IApplicationLifetime");
            feature.AddKnownType("Microsoft.Extensions.Hosting.IHost,Microsoft.Extensions.Hosting.Abstractions", "Microsoft.Extensions.Hosting.IHost");
            feature.AddKnownType("Microsoft.Extensions.Hosting.IHostBuilder,Microsoft.Extensions.Hosting.Abstractions", "Microsoft.Extensions.Hosting.IHostBuilder");
            feature.AddKnownType("Microsoft.Extensions.Hosting.IHostedService,Microsoft.Extensions.Hosting.Abstractions", "Microsoft.Extensions.Hosting.IHostedService");
            feature.AddKnownType("Microsoft.Extensions.Hosting.IHostingEnvironment,Microsoft.Extensions.Hosting.Abstractions", "Microsoft.Extensions.Hosting.IHostingEnvironment");
            feature.AddKnownType("Microsoft.Extensions.Hosting.IHostLifetime,Microsoft.Extensions.Hosting.Abstractions", "Microsoft.Extensions.Hosting.IHostLifetime");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Microsoft.Extensions.Logging.Abstractions", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("Microsoft.Extensions.Logging.EventId,Microsoft.Extensions.Logging.Abstractions", "Microsoft.Extensions.Logging.EventId");
            feature.AddKnownType("Microsoft.Extensions.Logging.IExternalScopeProvider,Microsoft.Extensions.Logging.Abstractions", "Microsoft.Extensions.Logging.IExternalScopeProvider");
            feature.AddKnownType("Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.Abstractions", "Microsoft.Extensions.Logging.ILogger");
            feature.AddKnownType("Microsoft.Extensions.Logging.ILogger`1,Microsoft.Extensions.Logging.Abstractions", "Microsoft.Extensions.Logging.ILogger`1'1");
            feature.AddKnownType("Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.Abstractions", "Microsoft.Extensions.Logging.ILoggerFactory");
            feature.AddKnownType("Microsoft.Extensions.Logging.ILoggerProvider,Microsoft.Extensions.Logging.Abstractions", "Microsoft.Extensions.Logging.ILoggerProvider");
            feature.AddKnownType("Microsoft.Extensions.Logging.ISupportExternalScope,Microsoft.Extensions.Logging.Abstractions", "Microsoft.Extensions.Logging.ISupportExternalScope");
            feature.AddKnownType("Microsoft.Extensions.Logging.LoggerExternalScopeProvider,Microsoft.Extensions.Logging.Abstractions", "Microsoft.Extensions.Logging.LoggerExternalScopeProvider");
            feature.AddKnownType("Microsoft.Extensions.Logging.LoggerExternalScopeProvider+Scope,Microsoft.Extensions.Logging.Abstractions", "Microsoft.Extensions.Logging.Scope");
            feature.AddKnownType("Microsoft.Extensions.Logging.LoggerMessage+LogValues,Microsoft.Extensions.Logging.Abstractions", "Microsoft.Extensions.Logging.LogValues");
            feature.AddKnownType("Microsoft.Extensions.Logging.LoggerMessage+LogValues`1,Microsoft.Extensions.Logging.Abstractions", "Microsoft.Extensions.Logging.LogValues`1'1");
            feature.AddKnownType("Microsoft.Extensions.Logging.LoggerMessage+LogValues`2,Microsoft.Extensions.Logging.Abstractions", "Microsoft.Extensions.Logging.LogValues`2'2");
            feature.AddKnownType("Microsoft.Extensions.Logging.LoggerMessage+LogValues`3,Microsoft.Extensions.Logging.Abstractions", "Microsoft.Extensions.Logging.LogValues`3'3");
            feature.AddKnownType("Microsoft.Extensions.Logging.LoggerMessage+LogValues`4,Microsoft.Extensions.Logging.Abstractions", "Microsoft.Extensions.Logging.LogValues`4'4");
            feature.AddKnownType("Microsoft.Extensions.Logging.LoggerMessage+LogValues`5,Microsoft.Extensions.Logging.Abstractions", "Microsoft.Extensions.Logging.LogValues`5'5");
            feature.AddKnownType("Microsoft.Extensions.Logging.LoggerMessage+LogValues`6,Microsoft.Extensions.Logging.Abstractions", "Microsoft.Extensions.Logging.LogValues`6'6");
            feature.AddKnownType("Microsoft.Extensions.Logging.LoggerMessage+LogValues`7,Microsoft.Extensions.Logging.Abstractions", "Microsoft.Extensions.Logging.LogValues`7'7");
            feature.AddKnownType("Microsoft.Extensions.Logging.Logger`1,Microsoft.Extensions.Logging.Abstractions", "Microsoft.Extensions.Logging.Logger`1'1");
            feature.AddKnownType("Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.Abstractions", "Microsoft.Extensions.Logging.LogLevel");
            feature.AddKnownType("Microsoft.Extensions.Logging.Abstractions.NullLogger,Microsoft.Extensions.Logging.Abstractions", "Microsoft.Extensions.Logging.Abstractions.NullLogger");
            feature.AddKnownType("Microsoft.Extensions.Logging.Abstractions.NullLogger`1,Microsoft.Extensions.Logging.Abstractions", "Microsoft.Extensions.Logging.Abstractions.NullLogger`1'1");
            feature.AddKnownType("Microsoft.Extensions.Logging.Abstractions.NullLogger`1+NullDisposable,Microsoft.Extensions.Logging.Abstractions", "Microsoft.Extensions.Logging.Abstractions.NullDisposable'1");
            feature.AddKnownType("Microsoft.Extensions.Logging.Abstractions.NullLoggerFactory,Microsoft.Extensions.Logging.Abstractions", "Microsoft.Extensions.Logging.Abstractions.NullLoggerFactory");
            feature.AddKnownType("Microsoft.Extensions.Logging.Abstractions.NullLoggerProvider,Microsoft.Extensions.Logging.Abstractions", "Microsoft.Extensions.Logging.Abstractions.NullLoggerProvider");
            feature.AddKnownType("Microsoft.Extensions.Logging.Abstractions.Internal.NullScope,Microsoft.Extensions.Logging.Abstractions", "Microsoft.Extensions.Logging.Abstractions.Internal.NullScope");
            feature.AddKnownType("Microsoft.Extensions.Logging.Abstractions.Internal.TypeNameHelper,Microsoft.Extensions.Logging.Abstractions", "Microsoft.Extensions.Logging.Abstractions.Internal.TypeNameHelper");
            feature.AddKnownType("Microsoft.Extensions.Logging.Internal.FormattedLogValues,Microsoft.Extensions.Logging.Abstractions", "Microsoft.Extensions.Logging.Internal.FormattedLogValues");
            feature.AddKnownType("Microsoft.Extensions.Logging.Internal.LogValuesFormatter,Microsoft.Extensions.Logging.Abstractions", "Microsoft.Extensions.Logging.Internal.LogValuesFormatter");
            feature.AddKnownType("System.Runtime.CompilerServices.IsReadOnlyAttribute,Microsoft.Extensions.Logging.Abstractions", "IsReadOnlyAttribute");
            feature.AddKnownType("Microsoft.Extensions.Logging.LoggerFilterConfigureOptions,Microsoft.Extensions.Logging.Configuration", "Microsoft.Extensions.Logging.LoggerFilterConfigureOptions");
            feature.AddKnownType("Microsoft.Extensions.Logging.Configuration.ILoggerProviderConfiguration`1,Microsoft.Extensions.Logging.Configuration", "Microsoft.Extensions.Logging.Configuration.ILoggerProviderConfiguration`1'1");
            feature.AddKnownType("Microsoft.Extensions.Logging.Configuration.ILoggerProviderConfigurationFactory,Microsoft.Extensions.Logging.Configuration", "Microsoft.Extensions.Logging.Configuration.ILoggerProviderConfigurationFactory");
            feature.AddKnownType("Microsoft.Extensions.Logging.Configuration.LoggerProviderConfiguration`1,Microsoft.Extensions.Logging.Configuration", "Microsoft.Extensions.Logging.Configuration.LoggerProviderConfiguration`1'1");
            feature.AddKnownType("Microsoft.Extensions.Logging.Configuration.LoggerProviderConfigurationFactory,Microsoft.Extensions.Logging.Configuration", "Microsoft.Extensions.Logging.Configuration.LoggerProviderConfigurationFactory");
            feature.AddKnownType("Microsoft.Extensions.Logging.Configuration.LoggerProviderOptionsChangeTokenSource`2,Microsoft.Extensions.Logging.Configuration", "Microsoft.Extensions.Logging.Configuration.LoggerProviderOptionsChangeTokenSource`2'2");
            feature.AddKnownType("Microsoft.Extensions.Logging.Configuration.LoggingConfiguration,Microsoft.Extensions.Logging.Configuration", "Microsoft.Extensions.Logging.Configuration.LoggingConfiguration");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Microsoft.Extensions.Logging.Console", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings,Microsoft.Extensions.Logging.Console", "Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings");
            feature.AddKnownType("Microsoft.Extensions.Logging.Console.ConsoleLogger,Microsoft.Extensions.Logging.Console", "Microsoft.Extensions.Logging.Console.ConsoleLogger");
            feature.AddKnownType("Microsoft.Extensions.Logging.Console.ConsoleLogger+ConsoleColors,Microsoft.Extensions.Logging.Console", "Microsoft.Extensions.Logging.Console.ConsoleColors");
            feature.AddKnownType("Microsoft.Extensions.Logging.Console.ConsoleLogger+AnsiSystemConsole,Microsoft.Extensions.Logging.Console", "Microsoft.Extensions.Logging.Console.AnsiSystemConsole");
            feature.AddKnownType("Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions,Microsoft.Extensions.Logging.Console", "Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions");
            feature.AddKnownType("Microsoft.Extensions.Logging.Console.ConsoleLoggerOptionsSetup,Microsoft.Extensions.Logging.Console", "Microsoft.Extensions.Logging.Console.ConsoleLoggerOptionsSetup");
            feature.AddKnownType("Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider,Microsoft.Extensions.Logging.Console", "Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider");
            feature.AddKnownType("Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings,Microsoft.Extensions.Logging.Console", "Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings");
            feature.AddKnownType("Microsoft.Extensions.Logging.Console.ConsoleLogScope,Microsoft.Extensions.Logging.Console", "Microsoft.Extensions.Logging.Console.ConsoleLogScope");
            feature.AddKnownType("Microsoft.Extensions.Logging.Console.ConsoleLogScope+DisposableScope,Microsoft.Extensions.Logging.Console", "Microsoft.Extensions.Logging.Console.DisposableScope");
            feature.AddKnownType("Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings,Microsoft.Extensions.Logging.Console", "Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings");
            feature.AddKnownType("Microsoft.Extensions.Logging.Console.Internal.AnsiLogConsole,Microsoft.Extensions.Logging.Console", "Microsoft.Extensions.Logging.Console.Internal.AnsiLogConsole");
            feature.AddKnownType("Microsoft.Extensions.Logging.Console.Internal.ConsoleLoggerProcessor,Microsoft.Extensions.Logging.Console", "Microsoft.Extensions.Logging.Console.Internal.ConsoleLoggerProcessor");
            feature.AddKnownType("Microsoft.Extensions.Logging.Console.Internal.IAnsiSystemConsole,Microsoft.Extensions.Logging.Console", "Microsoft.Extensions.Logging.Console.Internal.IAnsiSystemConsole");
            feature.AddKnownType("Microsoft.Extensions.Logging.Console.Internal.IConsole,Microsoft.Extensions.Logging.Console", "Microsoft.Extensions.Logging.Console.Internal.IConsole");
            feature.AddKnownType("Microsoft.Extensions.Logging.Console.Internal.LogMessageEntry,Microsoft.Extensions.Logging.Console", "Microsoft.Extensions.Logging.Console.Internal.LogMessageEntry");
            feature.AddKnownType("Microsoft.Extensions.Logging.Console.Internal.WindowsLogConsole,Microsoft.Extensions.Logging.Console", "Microsoft.Extensions.Logging.Console.Internal.WindowsLogConsole");
            feature.AddKnownType("System.Runtime.CompilerServices.IsReadOnlyAttribute,Microsoft.Extensions.Logging.Console", "IsReadOnlyAttribute");
            feature.AddKnownType("Microsoft.Extensions.Logging.DefaultLoggerLevelConfigureOptions,Microsoft.Extensions.Logging", "Microsoft.Extensions.Logging.DefaultLoggerLevelConfigureOptions");
            feature.AddKnownType("Microsoft.Extensions.Logging.ILoggingBuilder,Microsoft.Extensions.Logging", "Microsoft.Extensions.Logging.ILoggingBuilder");
            feature.AddKnownType("Microsoft.Extensions.Logging.Logger,Microsoft.Extensions.Logging", "Microsoft.Extensions.Logging.Logger");
            feature.AddKnownType("Microsoft.Extensions.Logging.Logger+Scope,Microsoft.Extensions.Logging", "Microsoft.Extensions.Logging.Scope");
            feature.AddKnownType("Microsoft.Extensions.Logging.LoggerFactory,Microsoft.Extensions.Logging", "Microsoft.Extensions.Logging.LoggerFactory");
            feature.AddKnownType("Microsoft.Extensions.Logging.LoggerFactory+ProviderRegistration,Microsoft.Extensions.Logging", "Microsoft.Extensions.Logging.ProviderRegistration");
            feature.AddKnownType("Microsoft.Extensions.Logging.LoggerFilterOptions,Microsoft.Extensions.Logging", "Microsoft.Extensions.Logging.LoggerFilterOptions");
            feature.AddKnownType("Microsoft.Extensions.Logging.LoggerFilterRule,Microsoft.Extensions.Logging", "Microsoft.Extensions.Logging.LoggerFilterRule");
            feature.AddKnownType("Microsoft.Extensions.Logging.LoggerInformation,Microsoft.Extensions.Logging", "Microsoft.Extensions.Logging.LoggerInformation");
            feature.AddKnownType("Microsoft.Extensions.Logging.LoggerRuleSelector,Microsoft.Extensions.Logging", "Microsoft.Extensions.Logging.LoggerRuleSelector");
            feature.AddKnownType("Microsoft.Extensions.Logging.LoggingBuilder,Microsoft.Extensions.Logging", "Microsoft.Extensions.Logging.LoggingBuilder");
            feature.AddKnownType("Microsoft.Extensions.Logging.ProviderAliasAttribute,Microsoft.Extensions.Logging", "Microsoft.Extensions.Logging.ProviderAliasAttribute");
            feature.AddKnownType("Microsoft.Extensions.Logging.ProviderAliasUtilities,Microsoft.Extensions.Logging", "Microsoft.Extensions.Logging.ProviderAliasUtilities");
            feature.AddKnownType("Microsoft.Extensions.Logging.StaticFilterOptionsMonitor,Microsoft.Extensions.Logging", "Microsoft.Extensions.Logging.StaticFilterOptionsMonitor");
            feature.AddKnownType("Microsoft.Extensions.Options.ConfigurationChangeTokenSource`1,Microsoft.Extensions.Options.ConfigurationExtensions", "Microsoft.Extensions.Options.ConfigurationChangeTokenSource`1'1");
            feature.AddKnownType("Microsoft.Extensions.Options.ConfigureFromConfigurationOptions`1,Microsoft.Extensions.Options.ConfigurationExtensions", "Microsoft.Extensions.Options.ConfigureFromConfigurationOptions`1'1");
            feature.AddKnownType("Microsoft.Extensions.Options.NamedConfigureFromConfigurationOptions`1,Microsoft.Extensions.Options.ConfigurationExtensions", "Microsoft.Extensions.Options.NamedConfigureFromConfigurationOptions`1'1");
            feature.AddKnownType("Microsoft.Extensions.Options.ConfigureNamedOptions`1,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.ConfigureNamedOptions`1'1");
            feature.AddKnownType("Microsoft.Extensions.Options.ConfigureNamedOptions`2,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.ConfigureNamedOptions`2'2");
            feature.AddKnownType("Microsoft.Extensions.Options.ConfigureNamedOptions`3,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.ConfigureNamedOptions`3'3");
            feature.AddKnownType("Microsoft.Extensions.Options.ConfigureNamedOptions`4,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.ConfigureNamedOptions`4'4");
            feature.AddKnownType("Microsoft.Extensions.Options.ConfigureNamedOptions`5,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.ConfigureNamedOptions`5'5");
            feature.AddKnownType("Microsoft.Extensions.Options.ConfigureNamedOptions`6,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.ConfigureNamedOptions`6'6");
            feature.AddKnownType("Microsoft.Extensions.Options.ConfigureOptions`1,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.ConfigureOptions`1'1");
            feature.AddKnownType("Microsoft.Extensions.Options.IConfigureNamedOptions`1,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.IConfigureNamedOptions`1'1");
            feature.AddKnownType("Microsoft.Extensions.Options.IConfigureOptions`1,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.IConfigureOptions`1'1");
            feature.AddKnownType("Microsoft.Extensions.Options.IOptions`1,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.IOptions`1'1");
            feature.AddKnownType("Microsoft.Extensions.Options.IOptionsChangeTokenSource`1,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.IOptionsChangeTokenSource`1'1");
            feature.AddKnownType("Microsoft.Extensions.Options.IOptionsFactory`1,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.IOptionsFactory`1'1");
            feature.AddKnownType("Microsoft.Extensions.Options.IOptionsMonitor`1,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.IOptionsMonitor`1'1");
            feature.AddKnownType("Microsoft.Extensions.Options.IOptionsMonitorCache`1,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.IOptionsMonitorCache`1'1");
            feature.AddKnownType("Microsoft.Extensions.Options.IOptionsSnapshot`1,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.IOptionsSnapshot`1'1");
            feature.AddKnownType("Microsoft.Extensions.Options.IPostConfigureOptions`1,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.IPostConfigureOptions`1'1");
            feature.AddKnownType("Microsoft.Extensions.Options.IValidateOptions`1,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.IValidateOptions`1'1");
            feature.AddKnownType("Microsoft.Extensions.Options.OptionsBuilder`1,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.OptionsBuilder`1'1");
            feature.AddKnownType("Microsoft.Extensions.Options.OptionsCache`1,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.OptionsCache`1'1");
            feature.AddKnownType("Microsoft.Extensions.Options.OptionsFactory`1,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.OptionsFactory`1'1");
            feature.AddKnownType("Microsoft.Extensions.Options.OptionsManager`1,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.OptionsManager`1'1");
            feature.AddKnownType("Microsoft.Extensions.Options.OptionsMonitor`1,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.OptionsMonitor`1'1");
            feature.AddKnownType("Microsoft.Extensions.Options.OptionsMonitor`1+ChangeTrackerDisposable,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.ChangeTrackerDisposable'1");
            feature.AddKnownType("Microsoft.Extensions.Options.OptionsValidationException,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.OptionsValidationException");
            feature.AddKnownType("Microsoft.Extensions.Options.OptionsWrapper`1,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.OptionsWrapper`1'1");
            feature.AddKnownType("Microsoft.Extensions.Options.PostConfigureOptions`1,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.PostConfigureOptions`1'1");
            feature.AddKnownType("Microsoft.Extensions.Options.PostConfigureOptions`2,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.PostConfigureOptions`2'2");
            feature.AddKnownType("Microsoft.Extensions.Options.PostConfigureOptions`3,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.PostConfigureOptions`3'3");
            feature.AddKnownType("Microsoft.Extensions.Options.PostConfigureOptions`4,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.PostConfigureOptions`4'4");
            feature.AddKnownType("Microsoft.Extensions.Options.PostConfigureOptions`5,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.PostConfigureOptions`5'5");
            feature.AddKnownType("Microsoft.Extensions.Options.PostConfigureOptions`6,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.PostConfigureOptions`6'6");
            feature.AddKnownType("Microsoft.Extensions.Options.ValidateOptions`1,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.ValidateOptions`1'1");
            feature.AddKnownType("Microsoft.Extensions.Options.ValidateOptionsResult,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.ValidateOptionsResult");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Microsoft.Extensions.Primitives", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("Microsoft.Extensions.Internal.HashCodeCombiner,Microsoft.Extensions.Primitives", "Microsoft.Extensions.Internal.HashCodeCombiner");
            feature.AddKnownType("Microsoft.Extensions.Primitives.CancellationChangeToken,Microsoft.Extensions.Primitives", "Microsoft.Extensions.Primitives.CancellationChangeToken");
            feature.AddKnownType("Microsoft.Extensions.Primitives.CancellationChangeToken+NullDisposable,Microsoft.Extensions.Primitives", "Microsoft.Extensions.Primitives.NullDisposable");
            feature.AddKnownType("Microsoft.Extensions.Primitives.CompositeChangeToken,Microsoft.Extensions.Primitives", "Microsoft.Extensions.Primitives.CompositeChangeToken");
            feature.AddKnownType("Microsoft.Extensions.Primitives.IChangeToken,Microsoft.Extensions.Primitives", "Microsoft.Extensions.Primitives.IChangeToken");
            feature.AddKnownType("Microsoft.Extensions.Primitives.InplaceStringBuilder,Microsoft.Extensions.Primitives", "Microsoft.Extensions.Primitives.InplaceStringBuilder");
            feature.AddKnownType("Microsoft.Extensions.Primitives.Resources,Microsoft.Extensions.Primitives", "Microsoft.Extensions.Primitives.Resources");
            feature.AddKnownType("Microsoft.Extensions.Primitives.StringSegment,Microsoft.Extensions.Primitives", "Microsoft.Extensions.Primitives.StringSegment");
            feature.AddKnownType("Microsoft.Extensions.Primitives.StringSegmentComparer,Microsoft.Extensions.Primitives", "Microsoft.Extensions.Primitives.StringSegmentComparer");
            feature.AddKnownType("Microsoft.Extensions.Primitives.StringTokenizer,Microsoft.Extensions.Primitives", "Microsoft.Extensions.Primitives.StringTokenizer");
            feature.AddKnownType("Microsoft.Extensions.Primitives.StringTokenizer+Enumerator,Microsoft.Extensions.Primitives", "Microsoft.Extensions.Primitives.Microsoft.Extensions.Primitives.StringTokenizer.Enumerator");
            feature.AddKnownType("Microsoft.Extensions.Primitives.StringValues,Microsoft.Extensions.Primitives", "Microsoft.Extensions.Primitives.StringValues");
            feature.AddKnownType("Microsoft.Extensions.Primitives.StringValues+Enumerator,Microsoft.Extensions.Primitives", "Microsoft.Extensions.Primitives.Microsoft.Extensions.Primitives.StringValues.Enumerator");
            feature.AddKnownType("Microsoft.Extensions.Primitives.ExceptionArgument,Microsoft.Extensions.Primitives", "Microsoft.Extensions.Primitives.ExceptionArgument");
            feature.AddKnownType("Microsoft.Extensions.Primitives.ExceptionResource,Microsoft.Extensions.Primitives", "Microsoft.Extensions.Primitives.ExceptionResource");
            feature.AddKnownType("System.Runtime.CompilerServices.IsReadOnlyAttribute,Microsoft.Extensions.Primitives", "IsReadOnlyAttribute");
            feature.AddKnownType("Newtonsoft.Json.ConstructorHandling,Newtonsoft.Json", "Newtonsoft.Json.ConstructorHandling");
            feature.AddKnownType("Newtonsoft.Json.DateFormatHandling,Newtonsoft.Json", "Newtonsoft.Json.DateFormatHandling");
            feature.AddKnownType("Newtonsoft.Json.DateParseHandling,Newtonsoft.Json", "Newtonsoft.Json.DateParseHandling");
            feature.AddKnownType("Newtonsoft.Json.DateTimeZoneHandling,Newtonsoft.Json", "Newtonsoft.Json.DateTimeZoneHandling");
            feature.AddKnownType("Newtonsoft.Json.DefaultValueHandling,Newtonsoft.Json", "Newtonsoft.Json.DefaultValueHandling");
            feature.AddKnownType("Newtonsoft.Json.FloatFormatHandling,Newtonsoft.Json", "Newtonsoft.Json.FloatFormatHandling");
            feature.AddKnownType("Newtonsoft.Json.FloatParseHandling,Newtonsoft.Json", "Newtonsoft.Json.FloatParseHandling");
            feature.AddKnownType("Newtonsoft.Json.Formatting,Newtonsoft.Json", "Newtonsoft.Json.Formatting");
            feature.AddKnownType("Newtonsoft.Json.IArrayPool`1,Newtonsoft.Json", "Newtonsoft.Json.IArrayPool`1'1");
            feature.AddKnownType("Newtonsoft.Json.IJsonLineInfo,Newtonsoft.Json", "Newtonsoft.Json.IJsonLineInfo");
            feature.AddKnownType("Newtonsoft.Json.JsonArrayAttribute,Newtonsoft.Json", "Newtonsoft.Json.JsonArrayAttribute");
            feature.AddKnownType("Newtonsoft.Json.JsonConstructorAttribute,Newtonsoft.Json", "Newtonsoft.Json.JsonConstructorAttribute");
            feature.AddKnownType("Newtonsoft.Json.JsonContainerAttribute,Newtonsoft.Json", "Newtonsoft.Json.JsonContainerAttribute");
            feature.AddKnownType("Newtonsoft.Json.JsonConverter,Newtonsoft.Json", "Newtonsoft.Json.JsonConverter");
            feature.AddKnownType("Newtonsoft.Json.JsonConverterAttribute,Newtonsoft.Json", "Newtonsoft.Json.JsonConverterAttribute");
            feature.AddKnownType("Newtonsoft.Json.JsonConverterCollection,Newtonsoft.Json", "Newtonsoft.Json.JsonConverterCollection");
            feature.AddKnownType("Newtonsoft.Json.JsonDictionaryAttribute,Newtonsoft.Json", "Newtonsoft.Json.JsonDictionaryAttribute");
            feature.AddKnownType("Newtonsoft.Json.JsonException,Newtonsoft.Json", "Newtonsoft.Json.JsonException");
            feature.AddKnownType("Newtonsoft.Json.JsonExtensionDataAttribute,Newtonsoft.Json", "Newtonsoft.Json.JsonExtensionDataAttribute");
            feature.AddKnownType("Newtonsoft.Json.JsonIgnoreAttribute,Newtonsoft.Json", "Newtonsoft.Json.JsonIgnoreAttribute");
            feature.AddKnownType("Newtonsoft.Json.JsonObjectAttribute,Newtonsoft.Json", "Newtonsoft.Json.JsonObjectAttribute");
            feature.AddKnownType("Newtonsoft.Json.JsonContainerType,Newtonsoft.Json", "Newtonsoft.Json.JsonContainerType");
            feature.AddKnownType("Newtonsoft.Json.JsonPosition,Newtonsoft.Json", "Newtonsoft.Json.JsonPosition");
            feature.AddKnownType("Newtonsoft.Json.JsonPropertyAttribute,Newtonsoft.Json", "Newtonsoft.Json.JsonPropertyAttribute");
            feature.AddKnownType("Newtonsoft.Json.JsonReader,Newtonsoft.Json", "Newtonsoft.Json.JsonReader");
            feature.AddKnownType("Newtonsoft.Json.JsonReader+State,Newtonsoft.Json", "Newtonsoft.Json.State");
            feature.AddKnownType("Newtonsoft.Json.JsonReaderException,Newtonsoft.Json", "Newtonsoft.Json.JsonReaderException");
            feature.AddKnownType("Newtonsoft.Json.JsonRequiredAttribute,Newtonsoft.Json", "Newtonsoft.Json.JsonRequiredAttribute");
            feature.AddKnownType("Newtonsoft.Json.JsonSerializationException,Newtonsoft.Json", "Newtonsoft.Json.JsonSerializationException");
            feature.AddKnownType("Newtonsoft.Json.JsonSerializer,Newtonsoft.Json", "Newtonsoft.Json.JsonSerializer");
            feature.AddKnownType("Newtonsoft.Json.JsonSerializerSettings,Newtonsoft.Json", "Newtonsoft.Json.JsonSerializerSettings");
            feature.AddKnownType("Newtonsoft.Json.JsonTextReader,Newtonsoft.Json", "Newtonsoft.Json.JsonTextReader");
            feature.AddKnownType("Newtonsoft.Json.ReadType,Newtonsoft.Json", "Newtonsoft.Json.ReadType");
            feature.AddKnownType("Newtonsoft.Json.JsonTextWriter,Newtonsoft.Json", "Newtonsoft.Json.JsonTextWriter");
            feature.AddKnownType("Newtonsoft.Json.JsonToken,Newtonsoft.Json", "Newtonsoft.Json.JsonToken");
            feature.AddKnownType("Newtonsoft.Json.JsonValidatingReader,Newtonsoft.Json", "Newtonsoft.Json.JsonValidatingReader");
            feature.AddKnownType("Newtonsoft.Json.JsonValidatingReader+SchemaScope,Newtonsoft.Json", "Newtonsoft.Json.SchemaScope");
            feature.AddKnownType("Newtonsoft.Json.JsonWriter,Newtonsoft.Json", "Newtonsoft.Json.JsonWriter");
            feature.AddKnownType("Newtonsoft.Json.JsonWriter+State,Newtonsoft.Json", "Newtonsoft.Json.State");
            feature.AddKnownType("Newtonsoft.Json.JsonWriterException,Newtonsoft.Json", "Newtonsoft.Json.JsonWriterException");
            feature.AddKnownType("Newtonsoft.Json.MemberSerialization,Newtonsoft.Json", "Newtonsoft.Json.MemberSerialization");
            feature.AddKnownType("Newtonsoft.Json.MetadataPropertyHandling,Newtonsoft.Json", "Newtonsoft.Json.MetadataPropertyHandling");
            feature.AddKnownType("Newtonsoft.Json.MissingMemberHandling,Newtonsoft.Json", "Newtonsoft.Json.MissingMemberHandling");
            feature.AddKnownType("Newtonsoft.Json.NullValueHandling,Newtonsoft.Json", "Newtonsoft.Json.NullValueHandling");
            feature.AddKnownType("Newtonsoft.Json.ObjectCreationHandling,Newtonsoft.Json", "Newtonsoft.Json.ObjectCreationHandling");
            feature.AddKnownType("Newtonsoft.Json.PreserveReferencesHandling,Newtonsoft.Json", "Newtonsoft.Json.PreserveReferencesHandling");
            feature.AddKnownType("Newtonsoft.Json.ReferenceLoopHandling,Newtonsoft.Json", "Newtonsoft.Json.ReferenceLoopHandling");
            feature.AddKnownType("Newtonsoft.Json.Required,Newtonsoft.Json", "Newtonsoft.Json.Required");
            feature.AddKnownType("Newtonsoft.Json.SerializationBinder,Newtonsoft.Json", "Newtonsoft.Json.SerializationBinder");
            feature.AddKnownType("Newtonsoft.Json.StringEscapeHandling,Newtonsoft.Json", "Newtonsoft.Json.StringEscapeHandling");
            feature.AddKnownType("Newtonsoft.Json.TraceLevel,Newtonsoft.Json", "Newtonsoft.Json.TraceLevel");
            feature.AddKnownType("Newtonsoft.Json.TypeNameAssemblyFormatHandling,Newtonsoft.Json", "Newtonsoft.Json.TypeNameAssemblyFormatHandling");
            feature.AddKnownType("Newtonsoft.Json.TypeNameHandling,Newtonsoft.Json", "Newtonsoft.Json.TypeNameHandling");
            feature.AddKnownType("Newtonsoft.Json.WriteState,Newtonsoft.Json", "Newtonsoft.Json.WriteState");
            feature.AddKnownType("Newtonsoft.Json.Bson.BsonBinaryType,Newtonsoft.Json", "Newtonsoft.Json.Bson.BsonBinaryType");
            feature.AddKnownType("Newtonsoft.Json.Bson.BsonBinaryWriter,Newtonsoft.Json", "Newtonsoft.Json.Bson.BsonBinaryWriter");
            feature.AddKnownType("Newtonsoft.Json.Bson.BsonObjectId,Newtonsoft.Json", "Newtonsoft.Json.Bson.BsonObjectId");
            feature.AddKnownType("Newtonsoft.Json.Bson.BsonReader,Newtonsoft.Json", "Newtonsoft.Json.Bson.BsonReader");
            feature.AddKnownType("Newtonsoft.Json.Bson.BsonReader+BsonReaderState,Newtonsoft.Json", "Newtonsoft.Json.Bson.BsonReaderState");
            feature.AddKnownType("Newtonsoft.Json.Bson.BsonReader+ContainerContext,Newtonsoft.Json", "Newtonsoft.Json.Bson.ContainerContext");
            feature.AddKnownType("Newtonsoft.Json.Bson.BsonToken,Newtonsoft.Json", "Newtonsoft.Json.Bson.BsonToken");
            feature.AddKnownType("Newtonsoft.Json.Bson.BsonObject,Newtonsoft.Json", "Newtonsoft.Json.Bson.BsonObject");
            feature.AddKnownType("Newtonsoft.Json.Bson.BsonArray,Newtonsoft.Json", "Newtonsoft.Json.Bson.BsonArray");
            feature.AddKnownType("Newtonsoft.Json.Bson.BsonEmpty,Newtonsoft.Json", "Newtonsoft.Json.Bson.BsonEmpty");
            feature.AddKnownType("Newtonsoft.Json.Bson.BsonValue,Newtonsoft.Json", "Newtonsoft.Json.Bson.BsonValue");
            feature.AddKnownType("Newtonsoft.Json.Bson.BsonBoolean,Newtonsoft.Json", "Newtonsoft.Json.Bson.BsonBoolean");
            feature.AddKnownType("Newtonsoft.Json.Bson.BsonString,Newtonsoft.Json", "Newtonsoft.Json.Bson.BsonString");
            feature.AddKnownType("Newtonsoft.Json.Bson.BsonBinary,Newtonsoft.Json", "Newtonsoft.Json.Bson.BsonBinary");
            feature.AddKnownType("Newtonsoft.Json.Bson.BsonRegex,Newtonsoft.Json", "Newtonsoft.Json.Bson.BsonRegex");
            feature.AddKnownType("Newtonsoft.Json.Bson.BsonProperty,Newtonsoft.Json", "Newtonsoft.Json.Bson.BsonProperty");
            feature.AddKnownType("Newtonsoft.Json.Bson.BsonType,Newtonsoft.Json", "Newtonsoft.Json.Bson.BsonType");
            feature.AddKnownType("Newtonsoft.Json.Bson.BsonWriter,Newtonsoft.Json", "Newtonsoft.Json.Bson.BsonWriter");
            feature.AddKnownType("Newtonsoft.Json.Converters.BinaryConverter,Newtonsoft.Json", "Newtonsoft.Json.Converters.BinaryConverter");
            feature.AddKnownType("Newtonsoft.Json.Converters.BsonObjectIdConverter,Newtonsoft.Json", "Newtonsoft.Json.Converters.BsonObjectIdConverter");
            feature.AddKnownType("Newtonsoft.Json.Converters.CustomCreationConverter`1,Newtonsoft.Json", "Newtonsoft.Json.Converters.CustomCreationConverter`1'1");
            feature.AddKnownType("Newtonsoft.Json.Converters.DateTimeConverterBase,Newtonsoft.Json", "Newtonsoft.Json.Converters.DateTimeConverterBase");
            feature.AddKnownType("Newtonsoft.Json.Converters.DiscriminatedUnionConverter,Newtonsoft.Json", "Newtonsoft.Json.Converters.DiscriminatedUnionConverter");
            feature.AddKnownType("Newtonsoft.Json.Converters.DiscriminatedUnionConverter+Union,Newtonsoft.Json", "Newtonsoft.Json.Converters.Union");
            feature.AddKnownType("Newtonsoft.Json.Converters.DiscriminatedUnionConverter+UnionCase,Newtonsoft.Json", "Newtonsoft.Json.Converters.UnionCase");
            feature.AddKnownType("Newtonsoft.Json.Converters.ExpandoObjectConverter,Newtonsoft.Json", "Newtonsoft.Json.Converters.ExpandoObjectConverter");
            feature.AddKnownType("Newtonsoft.Json.Converters.IsoDateTimeConverter,Newtonsoft.Json", "Newtonsoft.Json.Converters.IsoDateTimeConverter");
            feature.AddKnownType("Newtonsoft.Json.Converters.JavaScriptDateTimeConverter,Newtonsoft.Json", "Newtonsoft.Json.Converters.JavaScriptDateTimeConverter");
            feature.AddKnownType("Newtonsoft.Json.Converters.KeyValuePairConverter,Newtonsoft.Json", "Newtonsoft.Json.Converters.KeyValuePairConverter");
            feature.AddKnownType("Newtonsoft.Json.Converters.RegexConverter,Newtonsoft.Json", "Newtonsoft.Json.Converters.RegexConverter");
            feature.AddKnownType("Newtonsoft.Json.Converters.StringEnumConverter,Newtonsoft.Json", "Newtonsoft.Json.Converters.StringEnumConverter");
            feature.AddKnownType("Newtonsoft.Json.Converters.VersionConverter,Newtonsoft.Json", "Newtonsoft.Json.Converters.VersionConverter");
            feature.AddKnownType("Newtonsoft.Json.Converters.XmlDocumentWrapper,Newtonsoft.Json", "Newtonsoft.Json.Converters.XmlDocumentWrapper");
            feature.AddKnownType("Newtonsoft.Json.Converters.XmlElementWrapper,Newtonsoft.Json", "Newtonsoft.Json.Converters.XmlElementWrapper");
            feature.AddKnownType("Newtonsoft.Json.Converters.XmlDeclarationWrapper,Newtonsoft.Json", "Newtonsoft.Json.Converters.XmlDeclarationWrapper");
            feature.AddKnownType("Newtonsoft.Json.Converters.XmlNodeWrapper,Newtonsoft.Json", "Newtonsoft.Json.Converters.XmlNodeWrapper");
            feature.AddKnownType("Newtonsoft.Json.Converters.IXmlDocument,Newtonsoft.Json", "Newtonsoft.Json.Converters.IXmlDocument");
            feature.AddKnownType("Newtonsoft.Json.Converters.IXmlDeclaration,Newtonsoft.Json", "Newtonsoft.Json.Converters.IXmlDeclaration");
            feature.AddKnownType("Newtonsoft.Json.Converters.IXmlDocumentType,Newtonsoft.Json", "Newtonsoft.Json.Converters.IXmlDocumentType");
            feature.AddKnownType("Newtonsoft.Json.Converters.IXmlElement,Newtonsoft.Json", "Newtonsoft.Json.Converters.IXmlElement");
            feature.AddKnownType("Newtonsoft.Json.Converters.IXmlNode,Newtonsoft.Json", "Newtonsoft.Json.Converters.IXmlNode");
            feature.AddKnownType("Newtonsoft.Json.Converters.XDeclarationWrapper,Newtonsoft.Json", "Newtonsoft.Json.Converters.XDeclarationWrapper");
            feature.AddKnownType("Newtonsoft.Json.Converters.XDocumentTypeWrapper,Newtonsoft.Json", "Newtonsoft.Json.Converters.XDocumentTypeWrapper");
            feature.AddKnownType("Newtonsoft.Json.Converters.XDocumentWrapper,Newtonsoft.Json", "Newtonsoft.Json.Converters.XDocumentWrapper");
            feature.AddKnownType("Newtonsoft.Json.Converters.XTextWrapper,Newtonsoft.Json", "Newtonsoft.Json.Converters.XTextWrapper");
            feature.AddKnownType("Newtonsoft.Json.Converters.XCommentWrapper,Newtonsoft.Json", "Newtonsoft.Json.Converters.XCommentWrapper");
            feature.AddKnownType("Newtonsoft.Json.Converters.XProcessingInstructionWrapper,Newtonsoft.Json", "Newtonsoft.Json.Converters.XProcessingInstructionWrapper");
            feature.AddKnownType("Newtonsoft.Json.Converters.XContainerWrapper,Newtonsoft.Json", "Newtonsoft.Json.Converters.XContainerWrapper");
            feature.AddKnownType("Newtonsoft.Json.Converters.XObjectWrapper,Newtonsoft.Json", "Newtonsoft.Json.Converters.XObjectWrapper");
            feature.AddKnownType("Newtonsoft.Json.Converters.XAttributeWrapper,Newtonsoft.Json", "Newtonsoft.Json.Converters.XAttributeWrapper");
            feature.AddKnownType("Newtonsoft.Json.Converters.XElementWrapper,Newtonsoft.Json", "Newtonsoft.Json.Converters.XElementWrapper");
            feature.AddKnownType("Newtonsoft.Json.Converters.XmlNodeConverter,Newtonsoft.Json", "Newtonsoft.Json.Converters.XmlNodeConverter");
            feature.AddKnownType("Newtonsoft.Json.Linq.CommentHandling,Newtonsoft.Json", "Newtonsoft.Json.Linq.CommentHandling");
            feature.AddKnownType("Newtonsoft.Json.Linq.LineInfoHandling,Newtonsoft.Json", "Newtonsoft.Json.Linq.LineInfoHandling");
            feature.AddKnownType("Newtonsoft.Json.Linq.IJEnumerable`1,Newtonsoft.Json", "Newtonsoft.Json.Linq.IJEnumerable`1'1");
            feature.AddKnownType("Newtonsoft.Json.Linq.JArray,Newtonsoft.Json", "Newtonsoft.Json.Linq.JArray");
            feature.AddKnownType("Newtonsoft.Json.Linq.JConstructor,Newtonsoft.Json", "Newtonsoft.Json.Linq.JConstructor");
            feature.AddKnownType("Newtonsoft.Json.Linq.JContainer,Newtonsoft.Json", "Newtonsoft.Json.Linq.JContainer");
            feature.AddKnownType("Newtonsoft.Json.Linq.JEnumerable`1,Newtonsoft.Json", "Newtonsoft.Json.Linq.JEnumerable`1'1");
            feature.AddKnownType("Newtonsoft.Json.Linq.JObject,Newtonsoft.Json", "Newtonsoft.Json.Linq.JObject");
            feature.AddKnownType("Newtonsoft.Json.Linq.JObject+JObjectDynamicProxy,Newtonsoft.Json", "Newtonsoft.Json.Linq.JObjectDynamicProxy");
            feature.AddKnownType("Newtonsoft.Json.Linq.JProperty,Newtonsoft.Json", "Newtonsoft.Json.Linq.JProperty");
            feature.AddKnownType("Newtonsoft.Json.Linq.JProperty+JPropertyList,Newtonsoft.Json", "Newtonsoft.Json.Linq.JPropertyList");
            feature.AddKnownType("Newtonsoft.Json.Linq.JPropertyKeyedCollection,Newtonsoft.Json", "Newtonsoft.Json.Linq.JPropertyKeyedCollection");
            feature.AddKnownType("Newtonsoft.Json.Linq.JRaw,Newtonsoft.Json", "Newtonsoft.Json.Linq.JRaw");
            feature.AddKnownType("Newtonsoft.Json.Linq.JsonLoadSettings,Newtonsoft.Json", "Newtonsoft.Json.Linq.JsonLoadSettings");
            feature.AddKnownType("Newtonsoft.Json.Linq.JsonMergeSettings,Newtonsoft.Json", "Newtonsoft.Json.Linq.JsonMergeSettings");
            feature.AddKnownType("Newtonsoft.Json.Linq.JToken,Newtonsoft.Json", "Newtonsoft.Json.Linq.JToken");
            feature.AddKnownType("Newtonsoft.Json.Linq.JToken+LineInfoAnnotation,Newtonsoft.Json", "Newtonsoft.Json.Linq.LineInfoAnnotation");
            feature.AddKnownType("Newtonsoft.Json.Linq.JTokenEqualityComparer,Newtonsoft.Json", "Newtonsoft.Json.Linq.JTokenEqualityComparer");
            feature.AddKnownType("Newtonsoft.Json.Linq.JTokenReader,Newtonsoft.Json", "Newtonsoft.Json.Linq.JTokenReader");
            feature.AddKnownType("Newtonsoft.Json.Linq.JTokenType,Newtonsoft.Json", "Newtonsoft.Json.Linq.JTokenType");
            feature.AddKnownType("Newtonsoft.Json.Linq.JTokenWriter,Newtonsoft.Json", "Newtonsoft.Json.Linq.JTokenWriter");
            feature.AddKnownType("Newtonsoft.Json.Linq.JValue,Newtonsoft.Json", "Newtonsoft.Json.Linq.JValue");
            feature.AddKnownType("Newtonsoft.Json.Linq.JValue+JValueDynamicProxy,Newtonsoft.Json", "Newtonsoft.Json.Linq.JValueDynamicProxy");
            feature.AddKnownType("Newtonsoft.Json.Linq.MergeArrayHandling,Newtonsoft.Json", "Newtonsoft.Json.Linq.MergeArrayHandling");
            feature.AddKnownType("Newtonsoft.Json.Linq.MergeNullValueHandling,Newtonsoft.Json", "Newtonsoft.Json.Linq.MergeNullValueHandling");
            feature.AddKnownType("Newtonsoft.Json.Linq.JsonPath.ArrayIndexFilter,Newtonsoft.Json", "Newtonsoft.Json.Linq.JsonPath.ArrayIndexFilter");
            feature.AddKnownType("Newtonsoft.Json.Linq.JsonPath.ArrayMultipleIndexFilter,Newtonsoft.Json", "Newtonsoft.Json.Linq.JsonPath.ArrayMultipleIndexFilter");
            feature.AddKnownType("Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter,Newtonsoft.Json", "Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter");
            feature.AddKnownType("Newtonsoft.Json.Linq.JsonPath.FieldFilter,Newtonsoft.Json", "Newtonsoft.Json.Linq.JsonPath.FieldFilter");
            feature.AddKnownType("Newtonsoft.Json.Linq.JsonPath.FieldMultipleFilter,Newtonsoft.Json", "Newtonsoft.Json.Linq.JsonPath.FieldMultipleFilter");
            feature.AddKnownType("Newtonsoft.Json.Linq.JsonPath.JPath,Newtonsoft.Json", "Newtonsoft.Json.Linq.JsonPath.JPath");
            feature.AddKnownType("Newtonsoft.Json.Linq.JsonPath.PathFilter,Newtonsoft.Json", "Newtonsoft.Json.Linq.JsonPath.PathFilter");
            feature.AddKnownType("Newtonsoft.Json.Linq.JsonPath.QueryOperator,Newtonsoft.Json", "Newtonsoft.Json.Linq.JsonPath.QueryOperator");
            feature.AddKnownType("Newtonsoft.Json.Linq.JsonPath.QueryExpression,Newtonsoft.Json", "Newtonsoft.Json.Linq.JsonPath.QueryExpression");
            feature.AddKnownType("Newtonsoft.Json.Linq.JsonPath.CompositeExpression,Newtonsoft.Json", "Newtonsoft.Json.Linq.JsonPath.CompositeExpression");
            feature.AddKnownType("Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression,Newtonsoft.Json", "Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression");
            feature.AddKnownType("Newtonsoft.Json.Linq.JsonPath.QueryFilter,Newtonsoft.Json", "Newtonsoft.Json.Linq.JsonPath.QueryFilter");
            feature.AddKnownType("Newtonsoft.Json.Linq.JsonPath.QueryScanFilter,Newtonsoft.Json", "Newtonsoft.Json.Linq.JsonPath.QueryScanFilter");
            feature.AddKnownType("Newtonsoft.Json.Linq.JsonPath.RootFilter,Newtonsoft.Json", "Newtonsoft.Json.Linq.JsonPath.RootFilter");
            feature.AddKnownType("Newtonsoft.Json.Linq.JsonPath.ScanFilter,Newtonsoft.Json", "Newtonsoft.Json.Linq.JsonPath.ScanFilter");
            feature.AddKnownType("Newtonsoft.Json.Linq.JsonPath.ScanMultipleFilter,Newtonsoft.Json", "Newtonsoft.Json.Linq.JsonPath.ScanMultipleFilter");
            feature.AddKnownType("Newtonsoft.Json.Schema.JsonSchema,Newtonsoft.Json", "Newtonsoft.Json.Schema.JsonSchema");
            feature.AddKnownType("Newtonsoft.Json.Schema.JsonSchemaBuilder,Newtonsoft.Json", "Newtonsoft.Json.Schema.JsonSchemaBuilder");
            feature.AddKnownType("Newtonsoft.Json.Schema.JsonSchemaException,Newtonsoft.Json", "Newtonsoft.Json.Schema.JsonSchemaException");
            feature.AddKnownType("Newtonsoft.Json.Schema.JsonSchemaGenerator,Newtonsoft.Json", "Newtonsoft.Json.Schema.JsonSchemaGenerator");
            feature.AddKnownType("Newtonsoft.Json.Schema.JsonSchemaGenerator+TypeSchema,Newtonsoft.Json", "Newtonsoft.Json.Schema.TypeSchema");
            feature.AddKnownType("Newtonsoft.Json.Schema.JsonSchemaModel,Newtonsoft.Json", "Newtonsoft.Json.Schema.JsonSchemaModel");
            feature.AddKnownType("Newtonsoft.Json.Schema.JsonSchemaModelBuilder,Newtonsoft.Json", "Newtonsoft.Json.Schema.JsonSchemaModelBuilder");
            feature.AddKnownType("Newtonsoft.Json.Schema.JsonSchemaNode,Newtonsoft.Json", "Newtonsoft.Json.Schema.JsonSchemaNode");
            feature.AddKnownType("Newtonsoft.Json.Schema.JsonSchemaNodeCollection,Newtonsoft.Json", "Newtonsoft.Json.Schema.JsonSchemaNodeCollection");
            feature.AddKnownType("Newtonsoft.Json.Schema.JsonSchemaResolver,Newtonsoft.Json", "Newtonsoft.Json.Schema.JsonSchemaResolver");
            feature.AddKnownType("Newtonsoft.Json.Schema.JsonSchemaType,Newtonsoft.Json", "Newtonsoft.Json.Schema.JsonSchemaType");
            feature.AddKnownType("Newtonsoft.Json.Schema.JsonSchemaWriter,Newtonsoft.Json", "Newtonsoft.Json.Schema.JsonSchemaWriter");
            feature.AddKnownType("Newtonsoft.Json.Schema.UndefinedSchemaIdHandling,Newtonsoft.Json", "Newtonsoft.Json.Schema.UndefinedSchemaIdHandling");
            feature.AddKnownType("Newtonsoft.Json.Schema.ValidationEventArgs,Newtonsoft.Json", "Newtonsoft.Json.Schema.ValidationEventArgs");
            feature.AddKnownType("Newtonsoft.Json.Serialization.CamelCaseNamingStrategy,Newtonsoft.Json", "Newtonsoft.Json.Serialization.CamelCaseNamingStrategy");
            feature.AddKnownType("Newtonsoft.Json.Serialization.ResolverContractKey,Newtonsoft.Json", "Newtonsoft.Json.Serialization.ResolverContractKey");
            feature.AddKnownType("Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver,Newtonsoft.Json", "Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver");
            feature.AddKnownType("Newtonsoft.Json.Serialization.DefaultContractResolver,Newtonsoft.Json", "Newtonsoft.Json.Serialization.DefaultContractResolver");
            feature.AddKnownType("Newtonsoft.Json.Serialization.DefaultContractResolver+EnumerableDictionaryWrapper`2,Newtonsoft.Json", "Newtonsoft.Json.Serialization.EnumerableDictionaryWrapper`2'2");
            feature.AddKnownType("Newtonsoft.Json.Serialization.DefaultNamingStrategy,Newtonsoft.Json", "Newtonsoft.Json.Serialization.DefaultNamingStrategy");
            feature.AddKnownType("Newtonsoft.Json.Serialization.DefaultReferenceResolver,Newtonsoft.Json", "Newtonsoft.Json.Serialization.DefaultReferenceResolver");
            feature.AddKnownType("Newtonsoft.Json.Serialization.DefaultSerializationBinder,Newtonsoft.Json", "Newtonsoft.Json.Serialization.DefaultSerializationBinder");
            feature.AddKnownType("Newtonsoft.Json.Serialization.ErrorContext,Newtonsoft.Json", "Newtonsoft.Json.Serialization.ErrorContext");
            feature.AddKnownType("Newtonsoft.Json.Serialization.ErrorEventArgs,Newtonsoft.Json", "Newtonsoft.Json.Serialization.ErrorEventArgs");
            feature.AddKnownType("Newtonsoft.Json.Serialization.ExpressionValueProvider,Newtonsoft.Json", "Newtonsoft.Json.Serialization.ExpressionValueProvider");
            feature.AddKnownType("Newtonsoft.Json.Serialization.FormatterConverter,Newtonsoft.Json", "Newtonsoft.Json.Serialization.FormatterConverter");
            feature.AddKnownType("Newtonsoft.Json.Serialization.IAttributeProvider,Newtonsoft.Json", "Newtonsoft.Json.Serialization.IAttributeProvider");
            feature.AddKnownType("Newtonsoft.Json.Serialization.IContractResolver,Newtonsoft.Json", "Newtonsoft.Json.Serialization.IContractResolver");
            feature.AddKnownType("Newtonsoft.Json.Serialization.IReferenceResolver,Newtonsoft.Json", "Newtonsoft.Json.Serialization.IReferenceResolver");
            feature.AddKnownType("Newtonsoft.Json.Serialization.ISerializationBinder,Newtonsoft.Json", "Newtonsoft.Json.Serialization.ISerializationBinder");
            feature.AddKnownType("Newtonsoft.Json.Serialization.ITraceWriter,Newtonsoft.Json", "Newtonsoft.Json.Serialization.ITraceWriter");
            feature.AddKnownType("Newtonsoft.Json.Serialization.IValueProvider,Newtonsoft.Json", "Newtonsoft.Json.Serialization.IValueProvider");
            feature.AddKnownType("Newtonsoft.Json.Serialization.JsonArrayContract,Newtonsoft.Json", "Newtonsoft.Json.Serialization.JsonArrayContract");
            feature.AddKnownType("Newtonsoft.Json.Serialization.JsonContainerContract,Newtonsoft.Json", "Newtonsoft.Json.Serialization.JsonContainerContract");
            feature.AddKnownType("Newtonsoft.Json.Serialization.JsonContractType,Newtonsoft.Json", "Newtonsoft.Json.Serialization.JsonContractType");
            feature.AddKnownType("Newtonsoft.Json.Serialization.JsonContract,Newtonsoft.Json", "Newtonsoft.Json.Serialization.JsonContract");
            feature.AddKnownType("Newtonsoft.Json.Serialization.JsonDictionaryContract,Newtonsoft.Json", "Newtonsoft.Json.Serialization.JsonDictionaryContract");
            feature.AddKnownType("Newtonsoft.Json.Serialization.JsonDynamicContract,Newtonsoft.Json", "Newtonsoft.Json.Serialization.JsonDynamicContract");
            feature.AddKnownType("Newtonsoft.Json.Serialization.JsonFormatterConverter,Newtonsoft.Json", "Newtonsoft.Json.Serialization.JsonFormatterConverter");
            feature.AddKnownType("Newtonsoft.Json.Serialization.JsonISerializableContract,Newtonsoft.Json", "Newtonsoft.Json.Serialization.JsonISerializableContract");
            feature.AddKnownType("Newtonsoft.Json.Serialization.JsonLinqContract,Newtonsoft.Json", "Newtonsoft.Json.Serialization.JsonLinqContract");
            feature.AddKnownType("Newtonsoft.Json.Serialization.JsonObjectContract,Newtonsoft.Json", "Newtonsoft.Json.Serialization.JsonObjectContract");
            feature.AddKnownType("Newtonsoft.Json.Serialization.JsonPrimitiveContract,Newtonsoft.Json", "Newtonsoft.Json.Serialization.JsonPrimitiveContract");
            feature.AddKnownType("Newtonsoft.Json.Serialization.JsonProperty,Newtonsoft.Json", "Newtonsoft.Json.Serialization.JsonProperty");
            feature.AddKnownType("Newtonsoft.Json.Serialization.JsonPropertyCollection,Newtonsoft.Json", "Newtonsoft.Json.Serialization.JsonPropertyCollection");
            feature.AddKnownType("Newtonsoft.Json.Serialization.JsonSerializerInternalBase,Newtonsoft.Json", "Newtonsoft.Json.Serialization.JsonSerializerInternalBase");
            feature.AddKnownType("Newtonsoft.Json.Serialization.JsonSerializerInternalBase+ReferenceEqualsEqualityComparer,Newtonsoft.Json", "Newtonsoft.Json.Serialization.ReferenceEqualsEqualityComparer");
            feature.AddKnownType("Newtonsoft.Json.Serialization.JsonSerializerInternalReader,Newtonsoft.Json", "Newtonsoft.Json.Serialization.JsonSerializerInternalReader");
            feature.AddKnownType("Newtonsoft.Json.Serialization.JsonSerializerInternalReader+PropertyPresence,Newtonsoft.Json", "Newtonsoft.Json.Serialization.PropertyPresence");
            feature.AddKnownType("Newtonsoft.Json.Serialization.JsonSerializerInternalReader+CreatorPropertyContext,Newtonsoft.Json", "Newtonsoft.Json.Serialization.CreatorPropertyContext");
            feature.AddKnownType("Newtonsoft.Json.Serialization.JsonSerializerInternalWriter,Newtonsoft.Json", "Newtonsoft.Json.Serialization.JsonSerializerInternalWriter");
            feature.AddKnownType("Newtonsoft.Json.Serialization.JsonSerializerProxy,Newtonsoft.Json", "Newtonsoft.Json.Serialization.JsonSerializerProxy");
            feature.AddKnownType("Newtonsoft.Json.Serialization.JsonStringContract,Newtonsoft.Json", "Newtonsoft.Json.Serialization.JsonStringContract");
            feature.AddKnownType("Newtonsoft.Json.Serialization.MemoryTraceWriter,Newtonsoft.Json", "Newtonsoft.Json.Serialization.MemoryTraceWriter");
            feature.AddKnownType("Newtonsoft.Json.Serialization.NamingStrategy,Newtonsoft.Json", "Newtonsoft.Json.Serialization.NamingStrategy");
            feature.AddKnownType("Newtonsoft.Json.Serialization.OnErrorAttribute,Newtonsoft.Json", "Newtonsoft.Json.Serialization.OnErrorAttribute");
            feature.AddKnownType("Newtonsoft.Json.Serialization.ReflectionAttributeProvider,Newtonsoft.Json", "Newtonsoft.Json.Serialization.ReflectionAttributeProvider");
            feature.AddKnownType("Newtonsoft.Json.Serialization.ReflectionValueProvider,Newtonsoft.Json", "Newtonsoft.Json.Serialization.ReflectionValueProvider");
            feature.AddKnownType("Newtonsoft.Json.Serialization.SerializationBinderAdapter,Newtonsoft.Json", "Newtonsoft.Json.Serialization.SerializationBinderAdapter");
            feature.AddKnownType("Newtonsoft.Json.Serialization.SnakeCaseNamingStrategy,Newtonsoft.Json", "Newtonsoft.Json.Serialization.SnakeCaseNamingStrategy");
            feature.AddKnownType("Newtonsoft.Json.Serialization.TraceJsonReader,Newtonsoft.Json", "Newtonsoft.Json.Serialization.TraceJsonReader");
            feature.AddKnownType("Newtonsoft.Json.Serialization.TraceJsonWriter,Newtonsoft.Json", "Newtonsoft.Json.Serialization.TraceJsonWriter");
            feature.AddKnownType("Newtonsoft.Json.Utilities.Base64Encoder,Newtonsoft.Json", "Newtonsoft.Json.Utilities.Base64Encoder");
            feature.AddKnownType("Newtonsoft.Json.Utilities.BidirectionalDictionary`2,Newtonsoft.Json", "Newtonsoft.Json.Utilities.BidirectionalDictionary`2'2");
            feature.AddKnownType("Newtonsoft.Json.Utilities.IWrappedCollection,Newtonsoft.Json", "Newtonsoft.Json.Utilities.IWrappedCollection");
            feature.AddKnownType("Newtonsoft.Json.Utilities.CollectionWrapper`1,Newtonsoft.Json", "Newtonsoft.Json.Utilities.CollectionWrapper`1'1");
            feature.AddKnownType("Newtonsoft.Json.Utilities.PrimitiveTypeCode,Newtonsoft.Json", "Newtonsoft.Json.Utilities.PrimitiveTypeCode");
            feature.AddKnownType("Newtonsoft.Json.Utilities.TypeInformation,Newtonsoft.Json", "Newtonsoft.Json.Utilities.TypeInformation");
            feature.AddKnownType("Newtonsoft.Json.Utilities.ParseResult,Newtonsoft.Json", "Newtonsoft.Json.Utilities.ParseResult");
            feature.AddKnownType("Newtonsoft.Json.Utilities.ConvertUtils+TypeConvertKey,Newtonsoft.Json", "Newtonsoft.Json.Utilities.TypeConvertKey");
            feature.AddKnownType("Newtonsoft.Json.Utilities.ConvertUtils+ConvertResult,Newtonsoft.Json", "Newtonsoft.Json.Utilities.ConvertResult");
            feature.AddKnownType("Newtonsoft.Json.Utilities.ParserTimeZone,Newtonsoft.Json", "Newtonsoft.Json.Utilities.ParserTimeZone");
            feature.AddKnownType("Newtonsoft.Json.Utilities.DateTimeParser,Newtonsoft.Json", "Newtonsoft.Json.Utilities.DateTimeParser");
            feature.AddKnownType("Newtonsoft.Json.Utilities.IWrappedDictionary,Newtonsoft.Json", "Newtonsoft.Json.Utilities.IWrappedDictionary");
            feature.AddKnownType("Newtonsoft.Json.Utilities.DictionaryWrapper`2,Newtonsoft.Json", "Newtonsoft.Json.Utilities.DictionaryWrapper`2'2");
            feature.AddKnownType("Newtonsoft.Json.Utilities.DictionaryWrapper`2+DictionaryEnumerator`2,Newtonsoft.Json", "Newtonsoft.Json.Utilities.DictionaryEnumerator`2'4");
            feature.AddKnownType("Newtonsoft.Json.Utilities.DynamicProxy`1,Newtonsoft.Json", "Newtonsoft.Json.Utilities.DynamicProxy`1'1");
            feature.AddKnownType("Newtonsoft.Json.Utilities.DynamicProxyMetaObject`1,Newtonsoft.Json", "Newtonsoft.Json.Utilities.DynamicProxyMetaObject`1'1");
            feature.AddKnownType("Newtonsoft.Json.Utilities.DynamicProxyMetaObject`1+GetBinderAdapter,Newtonsoft.Json", "Newtonsoft.Json.Utilities.GetBinderAdapter'1");
            feature.AddKnownType("Newtonsoft.Json.Utilities.NoThrowGetBinderMember,Newtonsoft.Json", "Newtonsoft.Json.Utilities.NoThrowGetBinderMember");
            feature.AddKnownType("Newtonsoft.Json.Utilities.NoThrowSetBinderMember,Newtonsoft.Json", "Newtonsoft.Json.Utilities.NoThrowSetBinderMember");
            feature.AddKnownType("Newtonsoft.Json.Utilities.NoThrowExpressionVisitor,Newtonsoft.Json", "Newtonsoft.Json.Utilities.NoThrowExpressionVisitor");
            feature.AddKnownType("Newtonsoft.Json.Utilities.EnumValue`1,Newtonsoft.Json", "Newtonsoft.Json.Utilities.EnumValue`1'1");
            feature.AddKnownType("Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory,Newtonsoft.Json", "Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory");
            feature.AddKnownType("Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory+ByRefParameter,Newtonsoft.Json", "Newtonsoft.Json.Utilities.ByRefParameter");
            feature.AddKnownType("Newtonsoft.Json.Utilities.FSharpFunction,Newtonsoft.Json", "Newtonsoft.Json.Utilities.FSharpFunction");
            feature.AddKnownType("Newtonsoft.Json.Utilities.ImmutableCollectionsUtils+ImmutableCollectionTypeInfo,Newtonsoft.Json", "Newtonsoft.Json.Utilities.ImmutableCollectionTypeInfo");
            feature.AddKnownType("Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory,Newtonsoft.Json", "Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory");
            feature.AddKnownType("Newtonsoft.Json.Utilities.MethodBinder+ParametersMatchComparer,Newtonsoft.Json", "Newtonsoft.Json.Utilities.ParametersMatchComparer");
            feature.AddKnownType("Newtonsoft.Json.Utilities.PropertyNameTable,Newtonsoft.Json", "Newtonsoft.Json.Utilities.PropertyNameTable");
            feature.AddKnownType("Newtonsoft.Json.Utilities.PropertyNameTable+Entry,Newtonsoft.Json", "Newtonsoft.Json.Utilities.Entry");
            feature.AddKnownType("Newtonsoft.Json.Utilities.ReflectionDelegateFactory,Newtonsoft.Json", "Newtonsoft.Json.Utilities.ReflectionDelegateFactory");
            feature.AddKnownType("Newtonsoft.Json.Utilities.ReflectionMember,Newtonsoft.Json", "Newtonsoft.Json.Utilities.ReflectionMember");
            feature.AddKnownType("Newtonsoft.Json.Utilities.ReflectionObject,Newtonsoft.Json", "Newtonsoft.Json.Utilities.ReflectionObject");
            feature.AddKnownType("Newtonsoft.Json.Utilities.MemberTypes,Newtonsoft.Json", "Newtonsoft.Json.Utilities.MemberTypes");
            feature.AddKnownType("Newtonsoft.Json.Utilities.BindingFlags,Newtonsoft.Json", "Newtonsoft.Json.Utilities.BindingFlags");
            feature.AddKnownType("Newtonsoft.Json.Utilities.TypeNameKey,Newtonsoft.Json", "Newtonsoft.Json.Utilities.TypeNameKey");
            feature.AddKnownType("Newtonsoft.Json.Utilities.StringBuffer,Newtonsoft.Json", "Newtonsoft.Json.Utilities.StringBuffer");
            feature.AddKnownType("Newtonsoft.Json.Utilities.StringReference,Newtonsoft.Json", "Newtonsoft.Json.Utilities.StringReference");
            feature.AddKnownType("Newtonsoft.Json.Utilities.StringUtils+SnakeCaseState,Newtonsoft.Json", "Newtonsoft.Json.Utilities.SnakeCaseState");
            feature.AddKnownType("Newtonsoft.Json.Utilities.ThreadSafeStore`2,Newtonsoft.Json", "Newtonsoft.Json.Utilities.ThreadSafeStore`2'2");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,Newtonsoft.Json", "FormatterAssemblyStyle");
            feature.AddKnownType("Orleans.Configuration.CustomStorageLogConsistencyOptions,Orleans.EventSourcing", "Orleans.Configuration.CustomStorageLogConsistencyOptions");
            feature.AddKnownType("Orleans.EventSourcing.JournaledGrain`1,Orleans.EventSourcing", "Orleans.EventSourcing.JournaledGrain`1'1");
            feature.AddKnownType("Orleans.EventSourcing.JournaledGrain`2,Orleans.EventSourcing", "Orleans.EventSourcing.JournaledGrain`2'2");
            feature.AddKnownType("Orleans.EventSourcing.Common.NotificationFailed,Orleans.EventSourcing", "Orleans.EventSourcing.Common.NotificationFailed");
            feature.AddKnownType("Orleans.EventSourcing.Common.PrimaryOperationFailed,Orleans.EventSourcing", "Orleans.EventSourcing.Common.PrimaryOperationFailed");
            feature.AddKnownType("Orleans.EventSourcing.Common.INotificationMessage,Orleans.EventSourcing", "Orleans.EventSourcing.Common.INotificationMessage");
            feature.AddKnownType("Orleans.EventSourcing.Common.VersionNotificationMessage,Orleans.EventSourcing", "Orleans.EventSourcing.Common.VersionNotificationMessage");
            feature.AddKnownType("Orleans.EventSourcing.Common.BatchedNotificationMessage,Orleans.EventSourcing", "Orleans.EventSourcing.Common.BatchedNotificationMessage");
            feature.AddKnownType("Orleans.EventSourcing.Common.NotificationTracker,Orleans.EventSourcing", "Orleans.EventSourcing.Common.NotificationTracker");
            feature.AddKnownType("Orleans.EventSourcing.Common.NotificationTracker+NotificationQueueState,Orleans.EventSourcing", "Orleans.EventSourcing.Common.Orleans.EventSourcing.Common.NotificationTracker.NotificationQueueState");
            feature.AddKnownType("Orleans.EventSourcing.Common.NotificationTracker+NotificationWorker,Orleans.EventSourcing", "Orleans.EventSourcing.Common.Orleans.EventSourcing.Common.NotificationTracker.NotificationWorker");
            feature.AddKnownType("Orleans.EventSourcing.Common.PrimaryBasedLogViewAdaptor`3,Orleans.EventSourcing", "Orleans.EventSourcing.Common.PrimaryBasedLogViewAdaptor`3'3");
            feature.AddKnownType("Orleans.EventSourcing.Common.SubmissionEntry`1,Orleans.EventSourcing", "Orleans.EventSourcing.Common.SubmissionEntry`1'1");
            feature.AddKnownType("Orleans.EventSourcing.Common.RecordedConnectionIssue,Orleans.EventSourcing", "Orleans.EventSourcing.Common.RecordedConnectionIssue");
            feature.AddKnownType("Orleans.EventSourcing.CustomStorage.ICustomStorageInterface`2,Orleans.EventSourcing", "Orleans.EventSourcing.CustomStorage.ICustomStorageInterface`2'2");
            feature.AddKnownType("Orleans.EventSourcing.CustomStorage.LogConsistencyProvider,Orleans.EventSourcing", "Orleans.EventSourcing.CustomStorage.LogConsistencyProvider");
            feature.AddKnownType("Orleans.EventSourcing.CustomStorage.CustomStorageAdaptor`2,Orleans.EventSourcing", "Orleans.EventSourcing.CustomStorage.CustomStorageAdaptor`2'2");
            feature.AddKnownType("Orleans.EventSourcing.CustomStorage.CustomStorageAdaptor`2+ReadRequest,Orleans.EventSourcing", "Orleans.EventSourcing.CustomStorage.ReadRequest'2");
            feature.AddKnownType("Orleans.EventSourcing.CustomStorage.CustomStorageAdaptor`2+ReadResponse`1,Orleans.EventSourcing", "Orleans.EventSourcing.CustomStorage.ReadResponse`1'3");
            feature.AddKnownType("Orleans.EventSourcing.CustomStorage.CustomStorageAdaptor`2+UpdatePrimaryFailed,Orleans.EventSourcing", "Orleans.EventSourcing.CustomStorage.Orleans.EventSourcing.CustomStorage.CustomStorageAdaptor`2'2.UpdatePrimaryFailed'2");
            feature.AddKnownType("Orleans.EventSourcing.CustomStorage.CustomStorageAdaptor`2+ReadFromPrimaryFailed,Orleans.EventSourcing", "Orleans.EventSourcing.CustomStorage.Orleans.EventSourcing.CustomStorage.CustomStorageAdaptor`2'2.ReadFromPrimaryFailed'2");
            feature.AddKnownType("Orleans.EventSourcing.CustomStorage.CustomStorageAdaptor`2+UpdateNotificationMessage,Orleans.EventSourcing", "Orleans.EventSourcing.CustomStorage.UpdateNotificationMessage'2");
            feature.AddKnownType("Orleans.EventSourcing.LogStorage.DefaultAdaptorFactory,Orleans.EventSourcing", "Orleans.EventSourcing.LogStorage.DefaultAdaptorFactory");
            feature.AddKnownType("Orleans.EventSourcing.LogStorage.LogConsistencyProvider,Orleans.EventSourcing", "Orleans.EventSourcing.LogStorage.LogConsistencyProvider");
            feature.AddKnownType("Orleans.EventSourcing.LogStorage.LogStateWithMetaDataAndETag`1,Orleans.EventSourcing", "Orleans.EventSourcing.LogStorage.LogStateWithMetaDataAndETag`1'1");
            feature.AddKnownType("Orleans.EventSourcing.LogStorage.LogStateWithMetaData`1,Orleans.EventSourcing", "Orleans.EventSourcing.LogStorage.LogStateWithMetaData`1'1");
            feature.AddKnownType("Orleans.EventSourcing.LogStorage.LogViewAdaptor`2,Orleans.EventSourcing", "Orleans.EventSourcing.LogStorage.LogViewAdaptor`2'2");
            feature.AddKnownType("Orleans.EventSourcing.LogStorage.LogViewAdaptor`2+UpdateLogStorageFailed,Orleans.EventSourcing", "Orleans.EventSourcing.LogStorage.Orleans.EventSourcing.LogStorage.LogViewAdaptor`2'2.UpdateLogStorageFailed'2");
            feature.AddKnownType("Orleans.EventSourcing.LogStorage.LogViewAdaptor`2+ReadFromLogStorageFailed,Orleans.EventSourcing", "Orleans.EventSourcing.LogStorage.Orleans.EventSourcing.LogStorage.LogViewAdaptor`2'2.ReadFromLogStorageFailed'2");
            feature.AddKnownType("Orleans.EventSourcing.LogStorage.LogViewAdaptor`2+UpdateNotificationMessage,Orleans.EventSourcing", "Orleans.EventSourcing.LogStorage.UpdateNotificationMessage'2");
            feature.AddKnownType("Orleans.EventSourcing.StateStorage.DefaultAdaptorFactory,Orleans.EventSourcing", "Orleans.EventSourcing.StateStorage.DefaultAdaptorFactory");
            feature.AddKnownType("Orleans.EventSourcing.StateStorage.GrainStateWithMetaDataAndETag`1,Orleans.EventSourcing", "Orleans.EventSourcing.StateStorage.GrainStateWithMetaDataAndETag`1'1");
            feature.AddKnownType("Orleans.EventSourcing.StateStorage.GrainStateWithMetaData`1,Orleans.EventSourcing", "Orleans.EventSourcing.StateStorage.GrainStateWithMetaData`1'1");
            feature.AddKnownType("Orleans.EventSourcing.StateStorage.LogConsistencyProvider,Orleans.EventSourcing", "Orleans.EventSourcing.StateStorage.LogConsistencyProvider");
            feature.AddKnownType("Orleans.EventSourcing.StateStorage.LogViewAdaptor`2,Orleans.EventSourcing", "Orleans.EventSourcing.StateStorage.LogViewAdaptor`2'2");
            feature.AddKnownType("Orleans.EventSourcing.StateStorage.LogViewAdaptor`2+UpdateStateStorageFailed,Orleans.EventSourcing", "Orleans.EventSourcing.StateStorage.Orleans.EventSourcing.StateStorage.LogViewAdaptor`2'2.UpdateStateStorageFailed'2");
            feature.AddKnownType("Orleans.EventSourcing.StateStorage.LogViewAdaptor`2+ReadFromStateStorageFailed,Orleans.EventSourcing", "Orleans.EventSourcing.StateStorage.Orleans.EventSourcing.StateStorage.LogViewAdaptor`2'2.ReadFromStateStorageFailed'2");
            feature.AddKnownType("Orleans.EventSourcing.StateStorage.LogViewAdaptor`2+UpdateNotificationMessage,Orleans.EventSourcing", "Orleans.EventSourcing.StateStorage.UpdateNotificationMessage'2");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Runtime.CompilerServices.Unsafe", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.IsReadOnlyAttribute,System.Runtime.CompilerServices.Unsafe", "IsReadOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.__BlockReflectionAttribute,System.Runtime.CompilerServices.Unsafe", "__BlockReflectionAttribute");
        }
    }
}
#pragma warning restore 162
#pragma warning restore 219
#pragma warning restore 414
#pragma warning restore 618
#pragma warning restore 649
#pragma warning restore 693
#pragma warning restore 1591
#pragma warning restore 1998
#endif
